<Project>
  <Name>NReflect</Name>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
    <Name>Filter</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>InvertFilter</Name>
        <Access>Public</Access>
        <Location left="141" top="809" />
        <Size width="290" height="349" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public IFilter Filter { get; set; }</Member>
        <Member type="Constructor">public InvertFilter(IFilter filter)</Member>
        <Member type="Method">public Boolean Reflect(NRClass nrClass)</Member>
        <Member type="Method">public Boolean Reflect(NRInterface nrInterface)</Member>
        <Member type="Method">public Boolean Reflect(NRStruct nrStruct)</Member>
        <Member type="Method">public Boolean Reflect(NRDelegate nrDelegate)</Member>
        <Member type="Method">public Boolean Reflect(NREnum nrEnum)</Member>
        <Member type="Method">public Boolean Reflect(NREnumValue nrEnumValue)</Member>
        <Member type="Method">public Boolean Reflect(NRMethod nrMethod)</Member>
        <Member type="Method">public Boolean Reflect(NROperator nrOperator)</Member>
        <Member type="Method">public Boolean Reflect(NREvent nrEvent)</Member>
        <Member type="Method">public Boolean Reflect(NRField nrField)</Member>
        <Member type="Method">public Boolean Reflect(NRConstructor nrConstructor)</Member>
        <Member type="Method">public Boolean Reflect(NRProperty nrProperty)</Member>
        <Member type="Method">public Boolean Reflect(NRAttribute nrAttribute)</Member>
        <Member type="Method">public Boolean Reflect(NRModule nrModule)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>StatisticFilter</Name>
        <Access>Public</Access>
        <Location left="474" top="809" />
        <Size width="290" height="825" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public IFilter Filter { get; set; }</Member>
        <Member type="Property">public Int32 ReflectedClasses { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredClasses { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedInterfaces { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredInterfaces { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedStructures { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredStructures { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedDelegates { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredDelegates { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedEnums { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredEnums { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedEnumValues { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredEnumValues { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedConstructors { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredConstructors { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedMethods { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredMethods { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedOperators { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredOperators { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedEvents { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredEvents { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedFields { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredFields { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedProperties { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredProperties { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedAttributes { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredAttributes { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedModules { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredModules { get; private set; }</Member>
        <Member type="Constructor">public StatisticFilter(IFilter filter)</Member>
        <Member type="Method">public Boolean Reflect(NRClass nrClass)</Member>
        <Member type="Method">public Boolean Reflect(NRInterface nrInterface)</Member>
        <Member type="Method">public Boolean Reflect(NRStruct nrStruct)</Member>
        <Member type="Method">public Boolean Reflect(NRDelegate nrDelegate)</Member>
        <Member type="Method">public Boolean Reflect(NREnum nrEnum)</Member>
        <Member type="Method">public Boolean Reflect(NREnumValue nrEnumValue)</Member>
        <Member type="Method">public Boolean Reflect(NRConstructor nrConstructor)</Member>
        <Member type="Method">public Boolean Reflect(NRMethod nrMethod)</Member>
        <Member type="Method">public Boolean Reflect(NROperator nrOperator)</Member>
        <Member type="Method">public Boolean Reflect(NREvent nrEvent)</Member>
        <Member type="Method">public Boolean Reflect(NRField nrField)</Member>
        <Member type="Method">public Boolean Reflect(NRProperty nrProperty)</Member>
        <Member type="Method">public Boolean Reflect(NRAttribute nrAttribute)</Member>
        <Member type="Method">public Boolean Reflect(NRModule nrModule)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ReflectAllFilter</Name>
        <Access>Public</Access>
        <Location left="141" top="396" />
        <Size width="290" height="332" />
        <Collapsed>True</Collapsed>
        <Member type="Constructor">public ReflectAllFilter()</Member>
        <Member type="Method">public Boolean Reflect(NRClass nrClass)</Member>
        <Member type="Method">public Boolean Reflect(NRInterface nrInterface)</Member>
        <Member type="Method">public Boolean Reflect(NRStruct nrStruct)</Member>
        <Member type="Method">public Boolean Reflect(NRDelegate nrDelegate)</Member>
        <Member type="Method">public Boolean Reflect(NREnum nrEnum)</Member>
        <Member type="Method">public Boolean Reflect(NREnumValue nrEnumValue)</Member>
        <Member type="Method">public Boolean Reflect(NRMethod nrMethod)</Member>
        <Member type="Method">public Boolean Reflect(NROperator nrOperator)</Member>
        <Member type="Method">public Boolean Reflect(NREvent nrEvent)</Member>
        <Member type="Method">public Boolean Reflect(NRField nrField)</Member>
        <Member type="Method">public Boolean Reflect(NRConstructor nrConstructor)</Member>
        <Member type="Method">public Boolean Reflect(NRProperty nrProperty)</Member>
        <Member type="Method">public Boolean Reflect(NRAttribute nrAttribute)</Member>
        <Member type="Method">public Boolean Reflect(NRModule nrModule)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>IncludeFilter</Name>
        <Access>Public</Access>
        <Location left="474" top="396" />
        <Size width="290" height="349" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public List&lt;FilterRule&gt; Rules { get; set; }</Member>
        <Member type="Constructor">public IncludeFilter()</Member>
        <Member type="Method">public Boolean Reflect(NRClass nrClass)</Member>
        <Member type="Method">public Boolean Reflect(NRInterface nrInterface)</Member>
        <Member type="Method">public Boolean Reflect(NRStruct nrStruct)</Member>
        <Member type="Method">public Boolean Reflect(NRDelegate nrDelegate)</Member>
        <Member type="Method">public Boolean Reflect(NREnum nrEnum)</Member>
        <Member type="Method">public Boolean Reflect(NREnumValue nrEnumValue)</Member>
        <Member type="Method">public Boolean Reflect(NRConstructor nrConstructor)</Member>
        <Member type="Method">public Boolean Reflect(NRMethod nrMethod)</Member>
        <Member type="Method">public Boolean Reflect(NROperator nrOperator)</Member>
        <Member type="Method">public Boolean Reflect(NREvent nrEvent)</Member>
        <Member type="Method">public Boolean Reflect(NRField nrField)</Member>
        <Member type="Method">public Boolean Reflect(NRProperty nrProperty)</Member>
        <Member type="Method">public Boolean Reflect(NRAttribute nrAttribute)</Member>
        <Member type="Method">public Boolean Reflect(NRModule nrModule)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IFilter</Name>
        <Access>Public</Access>
        <Location left="310" top="35" />
        <Size width="284" height="299" />
        <Collapsed>False</Collapsed>
        <Member type="Method">Boolean Reflect(NRClass nrClass)</Member>
        <Member type="Method">Boolean Reflect(NRInterface nrInterface)</Member>
        <Member type="Method">Boolean Reflect(NRStruct nrStruct)</Member>
        <Member type="Method">Boolean Reflect(NRDelegate nrDelegate)</Member>
        <Member type="Method">Boolean Reflect(NREnum nrEnum)</Member>
        <Member type="Method">Boolean Reflect(NREnumValue nrEnumValue)</Member>
        <Member type="Method">Boolean Reflect(NRConstructor nrConstructor)</Member>
        <Member type="Method">Boolean Reflect(NRMethod nrMethod)</Member>
        <Member type="Method">Boolean Reflect(NROperator nrOperator)</Member>
        <Member type="Method">Boolean Reflect(NREvent nrEvent)</Member>
        <Member type="Method">Boolean Reflect(NRField nrField)</Member>
        <Member type="Method">Boolean Reflect(NRProperty nrProperty)</Member>
        <Member type="Method">Boolean Reflect(NRAttribute nrAttribute)</Member>
        <Member type="Method">Boolean Reflect(NRModule nrModule)</Member>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Realization" first="1" second="4">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>452</X>
          <Y>783</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="3" second="4">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="0" second="4">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>452</X>
          <Y>783</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="2" second="4">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
    <Name>Visitor</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Interface">
        <Name>IVisitable</Name>
        <Access>Public</Access>
        <Location left="26" top="23" />
        <Size width="185" height="78" />
        <Collapsed>False</Collapsed>
        <Member type="Method">Void Accept(IVisitor visitor)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IVisitor</Name>
        <Access>Public</Access>
        <Location left="249" top="23" />
        <Size width="290" height="367" />
        <Collapsed>False</Collapsed>
        <Member type="Method">Void Visit(NRAssembly nrAssembly)</Member>
        <Member type="Method">Void Visit(NRClass nrClass)</Member>
        <Member type="Method">Void Visit(NRInterface nrInterface)</Member>
        <Member type="Method">Void Visit(NRDelegate nrDelegate)</Member>
        <Member type="Method">Void Visit(NRStruct nrStruct)</Member>
        <Member type="Method">Void Visit(NREnum nrEnum)</Member>
        <Member type="Method">Void Visit(NRField nrField)</Member>
        <Member type="Method">Void Visit(NRProperty nrProperty)</Member>
        <Member type="Method">Void Visit(NRMethod nrMethod)</Member>
        <Member type="Method">Void Visit(NROperator nrMethod)</Member>
        <Member type="Method">Void Visit(NRConstructor nrConstructor)</Member>
        <Member type="Method">Void Visit(NREvent nrEvent)</Member>
        <Member type="Method">Void Visit(NRParameter nrParameter)</Member>
        <Member type="Method">Void Visit(NRTypeParameter nrTypeParameter)</Member>
        <Member type="Method">Void Visit(NREnumValue nrEnumValue)</Member>
        <Member type="Method">Void Visit(NRAttribute nrAttribute)</Member>
        <Member type="Method">Void Visit(NRModule nrModule)</Member>
        <Member type="Method">Void Visit(NRTypeUsage nrTypeUsage)</Member>
      </Entity>
    </Entities>
    <Relationships />
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
    <Name>Types</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>NRGenericType</Name>
        <Access>Public</Access>
        <Location left="416" top="262" />
        <Size width="335" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public List&lt;NRTypeParameter&gt; GenericTypes { get; private set; }</Member>
        <Member type="Property">public Boolean IsGeneric { get; }</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRInterface</Name>
        <Access>Public</Access>
        <Location left="832" top="670" />
        <Size width="269" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public NRInterface()</Member>
        <Member type="Method">public override Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRClass</Name>
        <Access>Public</Access>
        <Location left="832" top="892" />
        <Size width="269" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public ClassModifier ClassModifier { get; set; }</Member>
        <Member type="Constructor">public NRClass()</Member>
        <Member type="Method">public override Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRStruct</Name>
        <Access>Public</Access>
        <Location left="1152" top="892" />
        <Size width="269" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public NRStruct()</Member>
        <Member type="Method">public override Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRDelegate</Name>
        <Access>Public</Access>
        <Location left="832" top="469" />
        <Size width="269" height="145" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public NRTypeUsage ReturnType { get; set; }</Member>
        <Member type="Property">public List&lt;NRParameter&gt; Parameters { get; private set; }</Member>
        <Member type="Constructor">public NRDelegate()</Member>
        <Member type="Method">public override void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRCompositeType</Name>
        <Access>Public</Access>
        <Location left="416" top="469" />
        <Size width="335" height="145" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public List&lt;NRTypeUsage&gt; ImplementedInterfaces { get; private set; }</Member>
        <Member type="Property">public List&lt;NRProperty&gt; Properties { get; private set; }</Member>
        <Member type="Property">public List&lt;NREvent&gt; Events { get; private set; }</Member>
        <Member type="Property">public List&lt;NRMethod&gt; Methods { get; private set; }</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRSingleInheritanceType</Name>
        <Access>Public</Access>
        <Location left="416" top="670" />
        <Size width="335" height="145" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public NRTypeUsage BaseType { get; set; }</Member>
        <Member type="Property">public List&lt;NRConstructor&gt; Constructors { get; private set; }</Member>
        <Member type="Property">public List&lt;NROperator&gt; Operators { get; private set; }</Member>
        <Member type="Property">public List&lt;NRField&gt; Fields { get; private set; }</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NREnum</Name>
        <Access>Public</Access>
        <Location left="832" top="262" />
        <Size width="269" height="145" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public List&lt;NREnumValue&gt; Values { get; private set; }</Member>
        <Member type="Property">public string UnderlyingType { get; set; }</Member>
        <Member type="Constructor">public NREnum()</Member>
        <Member type="Method">public override void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRTypeBase</Name>
        <Access>Public</Access>
        <Location left="416" top="16" />
        <Size width="335" height="196" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string Name { get; set; }</Member>
        <Member type="Property">public string Namespace { get; set; }</Member>
        <Member type="Property">public string FullName { get; set; }</Member>
        <Member type="Property">public AccessModifier AccessModifier { get; set; }</Member>
        <Member type="Property">public string DeclaringTypeFullName { get; set; }</Member>
        <Member type="Property">public List&lt;NRAttribute&gt; Attributes { get; private set; }</Member>
        <Member type="Method">public abstract void Accept(IVisitor visitor)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Generalization" first="0" second="8">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="5" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="6" second="5">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="7" second="8">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="4" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="1" second="5">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="2" second="6">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="3" second="6">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
    <Name>Members</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>NREvent</Name>
        <Access>Public</Access>
        <Location left="1013" top="554" />
        <Size width="189" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public NREvent()</Member>
        <Member type="Method">public override Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRConstructor</Name>
        <Access>Public</Access>
        <Location left="778" top="554" />
        <Size width="189" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public NRConstructor()</Member>
        <Member type="Method">public override Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRMethod</Name>
        <Access>Public</Access>
        <Location left="74" top="776" />
        <Size width="306" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public Boolean IsExtensionMethod { get; set; }</Member>
        <Member type="Property">public List&lt;NRTypeParameter&gt; GenericTypes { get; private set; }</Member>
        <Member type="Property">public Boolean IsGeneric { get; }</Member>
        <Member type="Constructor">public NRMethod()</Member>
        <Member type="Method">public override Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRField</Name>
        <Access>Public</Access>
        <Location left="477" top="261" />
        <Size width="245" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public String InitialValue { get; set; }</Member>
        <Member type="Property">public FieldModifier FieldModifier { get; set; }</Member>
        <Member type="Property">public Boolean IsStatic { get; set; }</Member>
        <Member type="Property">public Boolean IsReadonly { get; set; }</Member>
        <Member type="Property">public Boolean IsConstant { get; set; }</Member>
        <Member type="Property">public Boolean IsHider { get; set; }</Member>
        <Member type="Property">public Boolean IsVolatile { get; set; }</Member>
        <Member type="Constructor">public NRField()</Member>
        <Member type="Method">public override Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRReturnValueOperation</Name>
        <Access>Public</Access>
        <Location left="74" top="554" />
        <Size width="320" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public List&lt;NRAttribute&gt; ReturnValueAttributes { get; private set; }</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NROperation</Name>
        <Access>Public</Access>
        <Location left="74" top="261" />
        <Size width="320" height="213" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public OperationModifier OperationModifier { get; set; }</Member>
        <Member type="Property">public Boolean IsStatic { get; set; }</Member>
        <Member type="Property">public Boolean IsAbstract { get; set; }</Member>
        <Member type="Property">public Boolean IsVirtual { get; set; }</Member>
        <Member type="Property">public Boolean IsOverride { get; set; }</Member>
        <Member type="Property">public Boolean IsHider { get; set; }</Member>
        <Member type="Property">public Boolean IsSealed { get; set; }</Member>
        <Member type="Property">public List&lt;NRParameter&gt; Parameters { get; private set; }</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRMember</Name>
        <Access>Public</Access>
        <Location left="74" top="26" />
        <Size width="320" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public AccessModifier AccessModifier { get; set; }</Member>
        <Member type="Property">public String Name { get; set; }</Member>
        <Member type="Property">public NRTypeUsage Type { get; set; }</Member>
        <Member type="Property">public String TypeFullName { get; set; }</Member>
        <Member type="Property">public List&lt;NRAttribute&gt; Attributes { get; private set; }</Member>
        <Member type="Method">public abstract Void Accept(IVisitor visitor)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRProperty</Name>
        <Access>Public</Access>
        <Location left="477" top="554" />
        <Size width="263" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public AccessModifier GetterModifier { get; set; }</Member>
        <Member type="Property">public AccessModifier SetterModifier { get; set; }</Member>
        <Member type="Property">public Boolean HasGetter { get; set; }</Member>
        <Member type="Property">public Boolean HasSetter { get; set; }</Member>
        <Member type="Constructor">public NRProperty()</Member>
        <Member type="Method">public override Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NREnumValue</Name>
        <Access>Public</Access>
        <Location left="929" top="172" />
        <Size width="255" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public String Name { get; set; }</Member>
        <Member type="Property">public String Value { get; set; }</Member>
        <Member type="Property">public List&lt;NRAttribute&gt; Attributes { get; private set; }</Member>
        <Member type="Constructor">public NREnumValue()</Member>
        <Member type="Method">public Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NROperator</Name>
        <Access>Public</Access>
        <Location left="477" top="776" />
        <Size width="252" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public OperatorType OperatorType { get; set; }</Member>
        <Member type="Constructor">public NROperator()</Member>
        <Member type="Method">public override void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Generalization" first="1" second="5">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>873</X>
          <Y>529</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>234</X>
          <Y>500</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="2" second="4">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>234</X>
          <Y>673</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="0" second="5">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="3" second="6">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="7" second="5">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="4" second="5">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>234</X>
          <Y>529</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>234</X>
          <Y>502</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="5" second="6">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>234</X>
          <Y>236</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>234</X>
          <Y>236</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="9" second="4">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>234</X>
          <Y>748</Y>
        </BendPoint>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
    <Name>Generics</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>NRTypeParameter</Name>
        <Access>Public</Access>
        <Location left="434" top="290" />
        <Size width="280" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public String Name { get; set; }</Member>
        <Member type="Property">public List&lt;NRTypeUsage&gt; BaseTypes { get; private set; }</Member>
        <Member type="Property">public Boolean IsClass { get; set; }</Member>
        <Member type="Property">public Boolean IsStruct { get; set; }</Member>
        <Member type="Property">public Boolean IsConstructor { get; set; }</Member>
        <Member type="Property">public Boolean IsIn { get; set; }</Member>
        <Member type="Property">public Boolean IsOut { get; set; }</Member>
        <Member type="Property">public List&lt;NRAttribute&gt; Attributes { get; private set; }</Member>
        <Member type="Constructor">public NRTypeParameter()</Member>
        <Member type="Method">public Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRGenericType</Name>
        <Access>Public</Access>
        <Location left="396" top="181" />
        <Size width="162" height="111" />
        <Collapsed>True</Collapsed>
        <Member type="Property">public List&lt;NRTypeParameter&gt; GenericTypes { get; private set; }</Member>
        <Member type="Property">public Boolean IsGeneric { get; }</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IGeneric</Name>
        <Access>Public</Access>
        <Location left="434" top="30" />
        <Size width="280" height="95" />
        <Collapsed>False</Collapsed>
        <Member type="Property">List&lt;NRTypeParameter&gt; GenericTypes { get; }</Member>
        <Member type="Property">Boolean IsGeneric { get; }</Member>
      </Entity>
      <Entity type="Class">
        <Name>NRMethod</Name>
        <Access>Public</Access>
        <Location left="590" top="181" />
        <Size width="162" height="162" />
        <Collapsed>True</Collapsed>
        <Member type="Property">public Boolean IsExtensionMethod { get; set; }</Member>
        <Member type="Property">public List&lt;NRTypeParameter&gt; GenericTypes { get; private set; }</Member>
        <Member type="Property">public Boolean IsGeneric { get; }</Member>
        <Member type="Constructor">public NRMethod()</Member>
        <Member type="Method">public override Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Realization" first="1" second="2">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>479</X>
          <Y>156</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>571</X>
          <Y>156</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="3" second="2">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>672</X>
          <Y>156</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>571</X>
          <Y>156</Y>
        </BendPoint>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
    <Name>Attributes</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>NRReturnValueOperation</Name>
        <Access>Public</Access>
        <Location left="76" top="552" />
        <Size width="320" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public List&lt;NRAttribute&gt; ReturnValueAttributes { get; private set; }</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRModule</Name>
        <Access>Public</Access>
        <Location left="273" top="173" />
        <Size width="162" height="264" />
        <Collapsed>True</Collapsed>
        <Member type="Property">public String Name { get; set; }</Member>
        <Member type="Property">public List&lt;NRAttribute&gt; Attributes { get; private set; }</Member>
        <Member type="Property">public List&lt;NRClass&gt; Classes { get; private set; }</Member>
        <Member type="Property">public List&lt;NRInterface&gt; Interfaces { get; private set; }</Member>
        <Member type="Property">public List&lt;NRStruct&gt; Structs { get; private set; }</Member>
        <Member type="Property">public List&lt;NREnum&gt; Enums { get; private set; }</Member>
        <Member type="Property">public List&lt;NRDelegate&gt; Delegates { get; private set; }</Member>
        <Member type="Property">public List&lt;NRField&gt; Fields { get; private set; }</Member>
        <Member type="Property">public List&lt;NRMethod&gt; Methods { get; private set; }</Member>
        <Member type="Constructor">public NRModule()</Member>
        <Member type="Method">public Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRAssembly</Name>
        <Access>Public</Access>
        <Location left="36" top="173" />
        <Size width="162" height="315" />
        <Collapsed>True</Collapsed>
        <Member type="Property">public String FullName { get; set; }</Member>
        <Member type="Property">public String Source { get; set; }</Member>
        <Member type="Property">public List&lt;NRModule&gt; Modules { get; private set; }</Member>
        <Member type="Property">public List&lt;NRAttribute&gt; Attributes { get; private set; }</Member>
        <Member type="Property">public List&lt;NRClass&gt; Classes { get; private set; }</Member>
        <Member type="Property">public List&lt;NRInterface&gt; Interfaces { get; private set; }</Member>
        <Member type="Property">public List&lt;NRStruct&gt; Structs { get; private set; }</Member>
        <Member type="Property">public List&lt;NREnum&gt; Enums { get; private set; }</Member>
        <Member type="Property">public List&lt;NRDelegate&gt; Delegates { get; private set; }</Member>
        <Member type="Property">public IEnumerable&lt;NRTypeBase&gt; Types { get; }</Member>
        <Member type="Property">public IEnumerable&lt;NRCompositeType&gt; CompositTypes { get; }</Member>
        <Member type="Property">public IEnumerable&lt;NRSingleInheritanceType&gt; SingleInheritanceTypes { get; }</Member>
        <Member type="Constructor">public NRAssembly()</Member>
        <Member type="Method">public Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRTypeParameter</Name>
        <Access>Public</Access>
        <Location left="273" top="359" />
        <Size width="162" height="247" />
        <Collapsed>True</Collapsed>
        <Member type="Property">public String Name { get; set; }</Member>
        <Member type="Property">public List&lt;String&gt; BaseTypes { get; private set; }</Member>
        <Member type="Property">public Boolean IsClass { get; set; }</Member>
        <Member type="Property">public Boolean IsStruct { get; set; }</Member>
        <Member type="Property">public Boolean IsConstructor { get; set; }</Member>
        <Member type="Property">public Boolean IsIn { get; set; }</Member>
        <Member type="Property">public Boolean IsOut { get; set; }</Member>
        <Member type="Property">public List&lt;NRAttribute&gt; Attributes { get; private set; }</Member>
        <Member type="Constructor">public NRTypeParameter()</Member>
        <Member type="Method">public Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRParameter</Name>
        <Access>Public</Access>
        <Location left="36" top="359" />
        <Size width="162" height="216" />
        <Collapsed>True</Collapsed>
        <Member type="Property">public String Name { get; set; }</Member>
        <Member type="Property">public NRType Type { get; set; }</Member>
        <Member type="Property">public String TypeFullName { get; set; }</Member>
        <Member type="Property">public ParameterModifier ParameterModifier { get; set; }</Member>
        <Member type="Property">public String DefaultValue { get; set; }</Member>
        <Member type="Property">public List&lt;NRAttribute&gt; Attributes { get; private set; }</Member>
        <Member type="Constructor">public NRParameter()</Member>
        <Member type="Method">public Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRMember</Name>
        <Access>Public</Access>
        <Location left="273" top="264" />
        <Size width="162" height="179" />
        <Collapsed>True</Collapsed>
        <Member type="Property">public AccessModifier AccessModifier { get; set; }</Member>
        <Member type="Property">public String Name { get; set; }</Member>
        <Member type="Property">public NRType Type { get; set; }</Member>
        <Member type="Property">public String TypeFullName { get; set; }</Member>
        <Member type="Property">public List&lt;NRAttribute&gt; Attributes { get; private set; }</Member>
        <Member type="Method">public abstract Void Accept(IVisitor visitor)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRTypeBase</Name>
        <Access>Public</Access>
        <Location left="36" top="264" />
        <Size width="162" height="179" />
        <Collapsed>True</Collapsed>
        <Member type="Property">public String Name { get; set; }</Member>
        <Member type="Property">public String FullName { get; set; }</Member>
        <Member type="Property">public AccessModifier AccessModifier { get; set; }</Member>
        <Member type="Property">public String Parent { get; set; }</Member>
        <Member type="Property">public List&lt;NRAttribute&gt; Attributes { get; private set; }</Member>
        <Member type="Method">public abstract Void Accept(IVisitor visitor)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IAttributable</Name>
        <Access>Public</Access>
        <Location left="121" top="44" />
        <Size width="228" height="78" />
        <Collapsed>False</Collapsed>
        <Member type="Property">List&lt;NRAttribute&gt; Attributes { get; }</Member>
      </Entity>
      <Entity type="Class">
        <Name>NRAttribute</Name>
        <Access>Public</Access>
        <Location left="516" top="129" />
        <Size width="379" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public String Name { get; set; }</Member>
        <Member type="Property">public List&lt;NRAttributeValue&gt; Values { get; private set; }</Member>
        <Member type="Property">public Dictionary&lt;String, NRAttributeValue&gt; NamedValues { get; private set; }</Member>
        <Member type="Constructor">public NRAttribute()</Member>
        <Member type="Method">public Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRAttributeValue</Name>
        <Access>Public</Access>
        <Location left="620" top="328" />
        <Size width="170" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public String Type { get; set; }</Member>
        <Member type="Property">public Object Value { get; set; }</Member>
        <Member type="Constructor">public NRAttributeValue()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NREnumValue</Name>
        <Access>Public</Access>
        <Location left="36" top="456" />
        <Size width="162" height="216" />
        <Collapsed>True</Collapsed>
        <Member type="Property">public String Name { get; set; }</Member>
        <Member type="Property">public String Value { get; set; }</Member>
        <Member type="Constructor">public NREnumValue()</Member>
        <Member type="Method">public Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Realization" first="4" second="7">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>235</X>
          <Y>334</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="3" second="7">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>235</X>
          <Y>335</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="2" second="7">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="1" second="7">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="6" second="7">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>235</X>
          <Y>239</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="5" second="7">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>235</X>
          <Y>239</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="10" second="7">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>235</X>
          <Y>423</Y>
        </BendPoint>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
    <Name>AssemblyModule</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Interface">
        <Name>IEntityContainer</Name>
        <Access>Public</Access>
        <Location left="359" top="30" />
        <Size width="229" height="146" />
        <Collapsed>False</Collapsed>
        <Member type="Property">List&lt;NRClass&gt; Classes { get; }</Member>
        <Member type="Property">List&lt;NRInterface&gt; Interfaces { get; }</Member>
        <Member type="Property">List&lt;NRStruct&gt; Structs { get; }</Member>
        <Member type="Property">List&lt;NREnum&gt; Enums { get; }</Member>
        <Member type="Property">List&lt;NRDelegate&gt; Delegates { get; }</Member>
      </Entity>
      <Entity type="Class">
        <Name>NRAssembly</Name>
        <Access>Public</Access>
        <Location left="26" top="244" />
        <Size width="421" height="315" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public String FullName { get; set; }</Member>
        <Member type="Property">public String Source { get; set; }</Member>
        <Member type="Property">public List&lt;NRModule&gt; Modules { get; private set; }</Member>
        <Member type="Property">public List&lt;NRAttribute&gt; Attributes { get; private set; }</Member>
        <Member type="Property">public List&lt;NRClass&gt; Classes { get; private set; }</Member>
        <Member type="Property">public List&lt;NRInterface&gt; Interfaces { get; private set; }</Member>
        <Member type="Property">public List&lt;NRStruct&gt; Structs { get; private set; }</Member>
        <Member type="Property">public List&lt;NREnum&gt; Enums { get; private set; }</Member>
        <Member type="Property">public List&lt;NRDelegate&gt; Delegates { get; private set; }</Member>
        <Member type="Property">public IEnumerable&lt;NRTypeBase&gt; Types { get; }</Member>
        <Member type="Property">public IEnumerable&lt;NRCompositeType&gt; CompositTypes { get; }</Member>
        <Member type="Property">public IEnumerable&lt;NRSingleInheritanceType&gt; SingleInheritanceTypes { get; }</Member>
        <Member type="Constructor">public NRAssembly()</Member>
        <Member type="Method">public Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRModule</Name>
        <Access>Public</Access>
        <Location left="496" top="244" />
        <Size width="255" height="264" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public String Name { get; set; }</Member>
        <Member type="Property">public List&lt;NRAttribute&gt; Attributes { get; private set; }</Member>
        <Member type="Property">public List&lt;NRClass&gt; Classes { get; private set; }</Member>
        <Member type="Property">public List&lt;NRInterface&gt; Interfaces { get; private set; }</Member>
        <Member type="Property">public List&lt;NRStruct&gt; Structs { get; private set; }</Member>
        <Member type="Property">public List&lt;NREnum&gt; Enums { get; private set; }</Member>
        <Member type="Property">public List&lt;NRDelegate&gt; Delegates { get; private set; }</Member>
        <Member type="Property">public List&lt;NRField&gt; Fields { get; private set; }</Member>
        <Member type="Property">public List&lt;NRMethod&gt; Methods { get; private set; }</Member>
        <Member type="Constructor">public NRModule()</Member>
        <Member type="Method">public Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Realization" first="1" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="2" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
    <Name>Reflector</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>Reflector</Name>
        <Access>Public</Access>
        <Location left="51" top="115" />
        <Size width="477" height="145" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public NRAssembly Reflect(string fileName, bool useNewAppDomain = True)</Member>
        <Member type="Method">public NRAssembly Reflect(string fileName, ref IFilter filter, bool useNewAppDomain = True)</Member>
        <Member type="Method">public NRAssembly Reflect(Assembly assembly)</Member>
        <Member type="Method">public NRAssembly Reflect(Assembly assembly, ref IFilter filter)</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships />
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
    <Name>NReflect.dll</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Interface">
        <Name>IVisitable</Name>
        <Access>Public</Access>
        <Location left="224" top="3318" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">void Accept(IVisitor visitor)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IAttributable</Name>
        <Access>Public</Access>
        <Location left="12" top="3318" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">List&lt;NRAttribute&gt; Attributes { get; }</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IGeneric</Name>
        <Access>Public</Access>
        <Location left="2132" top="2901" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">List&lt;NRTypeParameter&gt; GenericTypes { get; }</Member>
        <Member type="Property">bool IsGeneric { get; }</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IMethodContainer</Name>
        <Access>Public</Access>
        <Location left="1920" top="2901" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">List&lt;NRMethod&gt; Methods { get; }</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IFieldContainer</Name>
        <Access>Public</Access>
        <Location left="1708" top="2901" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">List&lt;NRField&gt; Fields { get; }</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IEntityContainer</Name>
        <Access>Public</Access>
        <Location left="1496" top="2901" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">List&lt;NRClass&gt; Classes { get; }</Member>
        <Member type="Property">List&lt;NRInterface&gt; Interfaces { get; }</Member>
        <Member type="Property">List&lt;NRStruct&gt; Structs { get; }</Member>
        <Member type="Property">List&lt;NREnum&gt; Enums { get; }</Member>
        <Member type="Property">List&lt;NRDelegate&gt; Delegates { get; }</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IFilter</Name>
        <Access>Public</Access>
        <Location left="1284" top="2901" />
        <Size width="162" height="299" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool Reflect(NRClass nrClass)</Member>
        <Member type="Method">bool Reflect(NRInterface nrInterface)</Member>
        <Member type="Method">bool Reflect(NRStruct nrStruct)</Member>
        <Member type="Method">bool Reflect(NRDelegate nrDelegate)</Member>
        <Member type="Method">bool Reflect(NREnum nrEnum)</Member>
        <Member type="Method">bool Reflect(NREnumValue nrEnumValue)</Member>
        <Member type="Method">bool Reflect(NRConstructor nrConstructor)</Member>
        <Member type="Method">bool Reflect(NRMethod nrMethod)</Member>
        <Member type="Method">bool Reflect(NROperator nrOperator)</Member>
        <Member type="Method">bool Reflect(NREvent nrEvent)</Member>
        <Member type="Method">bool Reflect(NRField nrField)</Member>
        <Member type="Method">bool Reflect(NRProperty nrProperty)</Member>
        <Member type="Method">bool Reflect(NRAttribute nrAttribute)</Member>
        <Member type="Method">bool Reflect(NRModule nrModule)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IVisitor</Name>
        <Access>Public</Access>
        <Location left="1072" top="2901" />
        <Size width="162" height="367" />
        <Collapsed>False</Collapsed>
        <Member type="Method">void Visit(NRAssembly nrAssembly)</Member>
        <Member type="Method">void Visit(NRClass nrClass)</Member>
        <Member type="Method">void Visit(NRInterface nrInterface)</Member>
        <Member type="Method">void Visit(NRDelegate nrDelegate)</Member>
        <Member type="Method">void Visit(NRStruct nrStruct)</Member>
        <Member type="Method">void Visit(NREnum nrEnum)</Member>
        <Member type="Method">void Visit(NRField nrField)</Member>
        <Member type="Method">void Visit(NRProperty nrProperty)</Member>
        <Member type="Method">void Visit(NRMethod nrMethod)</Member>
        <Member type="Method">void Visit(NROperator nrOperator)</Member>
        <Member type="Method">void Visit(NRConstructor nrConstructor)</Member>
        <Member type="Method">void Visit(NREvent nrEvent)</Member>
        <Member type="Method">void Visit(NRParameter nrParameter)</Member>
        <Member type="Method">void Visit(NRTypeParameter nrTypeParameter)</Member>
        <Member type="Method">void Visit(NREnumValue nrEnumValue)</Member>
        <Member type="Method">void Visit(NRAttribute nrAttribute)</Member>
        <Member type="Method">void Visit(NRModule nrModule)</Member>
        <Member type="Method">void Visit(NRTypeUsage nrTypeUsage)</Member>
      </Entity>
      <Entity type="Class">
        <Name>NRMember</Name>
        <Access>Public</Access>
        <Location left="860" top="2901" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public AccessModifier AccessModifier { get; set; }</Member>
        <Member type="Property">public string Name { get; set; }</Member>
        <Member type="Property">public NRTypeUsage Type { get; set; }</Member>
        <Member type="Property">public string TypeFullName { get; set; }</Member>
        <Member type="Property">public List&lt;NRAttribute&gt; Attributes { get; private set; }</Member>
        <Member type="Constructor">protected NRMember()</Member>
        <Member type="Method">public abstract void Accept(IVisitor visitor)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NROperation</Name>
        <Access>Public</Access>
        <Location left="648" top="2901" />
        <Size width="162" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public OperationModifier OperationModifier { get; set; }</Member>
        <Member type="Property">public bool IsStatic { get; set; }</Member>
        <Member type="Property">public bool IsAbstract { get; set; }</Member>
        <Member type="Property">public bool IsVirtual { get; set; }</Member>
        <Member type="Property">public bool IsOverride { get; set; }</Member>
        <Member type="Property">public bool IsHider { get; set; }</Member>
        <Member type="Property">public bool IsSealed { get; set; }</Member>
        <Member type="Property">public List&lt;NRParameter&gt; Parameters { get; private set; }</Member>
        <Member type="Constructor">protected NROperation()</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRReturnValueOperation</Name>
        <Access>Public</Access>
        <Location left="436" top="2901" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public List&lt;NRAttribute&gt; ReturnValueAttributes { get; private set; }</Member>
        <Member type="Constructor">protected NRReturnValueOperation()</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRProperty</Name>
        <Access>Public</Access>
        <Location left="224" top="2901" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public AccessModifier GetterModifier { get; set; }</Member>
        <Member type="Property">public AccessModifier SetterModifier { get; set; }</Member>
        <Member type="Property">public bool HasGetter { get; set; }</Member>
        <Member type="Property">public bool HasSetter { get; set; }</Member>
        <Member type="Constructor">public NRProperty()</Member>
        <Member type="Method">public override void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRTypeBase</Name>
        <Access>Public</Access>
        <Location left="12" top="2901" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string Name { get; set; }</Member>
        <Member type="Property">public string Namespace { get; set; }</Member>
        <Member type="Property">public string FullName { get; set; }</Member>
        <Member type="Property">public AccessModifier AccessModifier { get; set; }</Member>
        <Member type="Property">public string DeclaringTypeFullName { get; set; }</Member>
        <Member type="Property">public List&lt;NRAttribute&gt; Attributes { get; private set; }</Member>
        <Member type="Constructor">protected NRTypeBase()</Member>
        <Member type="Method">public abstract void Accept(IVisitor visitor)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRGenericType</Name>
        <Access>Public</Access>
        <Location left="2132" top="1839" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public List&lt;NRTypeParameter&gt; GenericTypes { get; private set; }</Member>
        <Member type="Property">public bool IsGeneric { get; }</Member>
        <Member type="Constructor">protected NRGenericType()</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRCompositeType</Name>
        <Access>Public</Access>
        <Location left="1920" top="1839" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public List&lt;NRTypeUsage&gt; ImplementedInterfaces { get; private set; }</Member>
        <Member type="Property">public List&lt;NRProperty&gt; Properties { get; private set; }</Member>
        <Member type="Property">public List&lt;NREvent&gt; Events { get; private set; }</Member>
        <Member type="Property">public List&lt;NRMethod&gt; Methods { get; private set; }</Member>
        <Member type="Constructor">protected NRCompositeType()</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRSingleInheritanceType</Name>
        <Access>Public</Access>
        <Location left="1708" top="1839" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public NRTypeUsage BaseType { get; set; }</Member>
        <Member type="Property">public List&lt;NRConstructor&gt; Constructors { get; private set; }</Member>
        <Member type="Property">public List&lt;NROperator&gt; Operators { get; private set; }</Member>
        <Member type="Property">public List&lt;NRField&gt; Fields { get; private set; }</Member>
        <Member type="Constructor">protected NRSingleInheritanceType()</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRInterface</Name>
        <Access>Public</Access>
        <Location left="1496" top="1839" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public NRInterface()</Member>
        <Member type="Method">public override void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRAttribute</Name>
        <Access>Public</Access>
        <Location left="1284" top="1839" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string Name { get; set; }</Member>
        <Member type="Property">public string Namespace { get; set; }</Member>
        <Member type="Property">public List&lt;NRAttributeValue&gt; Values { get; private set; }</Member>
        <Member type="Property">public Dictionary&lt;string, NRAttributeValue&gt; NamedValues { get; private set; }</Member>
        <Member type="Constructor">public NRAttribute()</Member>
        <Member type="Method">public void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ReflectionWorker</Name>
        <Access>Internal</Access>
        <Location left="1072" top="1839" />
        <Size width="162" height="1012" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private string path</Member>
        <Member type="Field">private Dictionary&lt;string, Assembly&gt; assemblies</Member>
        <Member type="Field">private readonly Dictionary&lt;Type, NRTypeBase&gt; entities</Member>
        <Member type="Field">private readonly Dictionary&lt;string, OperatorType&gt; operatorMethodsMap</Member>
        <Member type="Field">private const BindingFlags STANDARD_BINDING_FLAGS = 60</Member>
        <Member type="Property">public IFilter Filter { get; set; }</Member>
        <Member type="Constructor">public ReflectionWorker()</Member>
        <Member type="Method">public NRAssembly Reflect(string fileName)</Member>
        <Member type="Method">public NRAssembly Reflect(Assembly assembly)</Member>
        <Member type="Method">private void ReflectModules(IEnumerable&lt;Module&gt; modules, NRAssembly nrAssembly)</Member>
        <Member type="Method">private Assembly CurrentDomain_ReflectionOnlyAssemblyResolve(object sender, ResolveEventArgs args)</Member>
        <Member type="Method">private void ReflectTypes(IEnumerable&lt;Type&gt; types, IEntityContainer entityContainer)</Member>
        <Member type="Method">private void ReflectType(Type type, IEntityContainer entityContainer)</Member>
        <Member type="Method">private void ReflectClass(Type type, IEntityContainer entityContainer)</Member>
        <Member type="Method">private void ReflectStruct(Type type, IEntityContainer entityContainer)</Member>
        <Member type="Method">private void ReflectInterface(Type type, IEntityContainer entityContainer)</Member>
        <Member type="Method">private void ReflectDelegate(Type type, IEntityContainer entityContainer)</Member>
        <Member type="Method">private void ReflectEnum(Type type, IEntityContainer entityContainer)</Member>
        <Member type="Method">private void ReflectSingleInheritanceType(Type type, NRSingleInheritanceType nrSingleInheritanceType)</Member>
        <Member type="Method">private void ReflectCompositeType(Type type, NRCompositeType nrCompositeType)</Member>
        <Member type="Method">private void ReflectGenericType(Type type, NRGenericType nrGenericType)</Member>
        <Member type="Method">private void ReflectTypeBase(Type type, NRTypeBase nrTypeBase)</Member>
        <Member type="Method">private void ReflectEvents(Type type, NRCompositeType nrCompositeType)</Member>
        <Member type="Method">private void ReflectFields(Type type, IFieldContainer fieldContainer)</Member>
        <Member type="Method">private void ReflectConstructors(Type type, NRSingleInheritanceType nrSingleInheritanceType)</Member>
        <Member type="Method">private void ReflectMethods(Type type, NRCompositeType nrCompositeType)</Member>
        <Member type="Method">private void ReflectProperties(Type type, NRCompositeType nrCompositeType)</Member>
        <Member type="Method">private void ReflectParameters(MethodBase methodBase, List&lt;NRParameter&gt; nrParameters)</Member>
        <Member type="Method">private void ReflectAttributes(IEnumerable&lt;CustomAttributeData&gt; attributeDatas, IAttributable attributable)</Member>
        <Member type="Method">private void ReflectField(FieldInfo fieldInfo, IFieldContainer fieldContainer)</Member>
        <Member type="Method">private void ReflectMethod(MethodInfo methodInfo, IMethodContainer methodContainer)</Member>
        <Member type="Method">private void ReflectOperator(MethodInfo methodInfo, NRSingleInheritanceType singleInheritanceType)</Member>
        <Member type="Method">private void ReflectReturnValueOperation(MethodInfo methodInfo, NRReturnValueOperation nrOperation, IMethodContainer methodContainer)</Member>
        <Member type="Method">private static bool HasMemberCompilerGeneratedAttribute(MemberInfo memberInfo)</Member>
        <Member type="Method">private static bool HasMemberAttribute(MemberInfo memberInfo, Type type)</Member>
        <Member type="Method">private static bool HasParamterAttribute(ParameterInfo parameterInfo, Type type)</Member>
        <Member type="Method">private static bool IsMethodOverwritten(Type type, MethodBase method)</Member>
        <Member type="Method">private static bool IsFieldOverwritten(Type type, FieldInfo fieldInfo)</Member>
        <Member type="Method">private static NRTypeUsage GetTypeUsage(Type type, Type declaringType)</Member>
        <Member type="Method">private static NRTypeUsage GetTypeUsage(Type type, MemberInfo memberInfo)</Member>
        <Member type="Method">private static NRTypeUsage GetTypeUsage(Type type, MethodInfo methodInfo)</Member>
        <Member type="Method">private static NRTypeUsage GetTypeUsage(Type type, ParameterInfo parameterInfo, Type currentType)</Member>
        <Member type="Method">private static NRTypeUsage GetTypeUsage(Type type, IEnumerable&lt;CustomAttributeData&gt; customAttributeDatas, Type declaringType)</Member>
        <Member type="Method">private static NRTypeUsage GetTypeUsage(Type type, ref List&lt;bool&gt; dynamicAttributeData, Type currentType, List&lt;Type&gt; genericArguments)</Member>
        <Member type="Method">private static string GetTypeName(Type type)</Member>
        <Member type="Method">private string GetRawTypeName(Type type)</Member>
        <Member type="Method">private static List&lt;string&gt; GetEventNames(Type type)</Member>
        <Member type="Method">private IEnumerable&lt;NRAttribute&gt; GetAttributes(IEnumerable&lt;CustomAttributeData&gt; attributeDatas)</Member>
        <Member type="Method">private NRAttributeValue GetAttributeValue(CustomAttributeTypedArgument argument)</Member>
        <Member type="Method">private IEnumerable&lt;NRTypeParameter&gt; GetTypeParameters(IEnumerable&lt;Type&gt; genericArguments)</Member>
        <Member type="Method">private static void ChangeOperationModifierIfOverwritten(Type type, MethodBase method, NROperation nrOperation)</Member>
        <Member type="Method">private static OperationModifier GetOperationModifier(MethodBase method)</Member>
        <Member type="Method">private static AccessModifier GetTypeAccessModifier(Type type)</Member>
        <Member type="Method">private static AccessModifier GetFieldAccessModifier(FieldInfo field)</Member>
        <Member type="Method">private static AccessModifier GetMethodAccessModifier(MethodBase methodBase)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRModule</Name>
        <Access>Public</Access>
        <Location left="860" top="1839" />
        <Size width="162" height="264" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string Name { get; set; }</Member>
        <Member type="Property">public List&lt;NRAttribute&gt; Attributes { get; private set; }</Member>
        <Member type="Property">public List&lt;NRClass&gt; Classes { get; private set; }</Member>
        <Member type="Property">public List&lt;NRInterface&gt; Interfaces { get; private set; }</Member>
        <Member type="Property">public List&lt;NRStruct&gt; Structs { get; private set; }</Member>
        <Member type="Property">public List&lt;NREnum&gt; Enums { get; private set; }</Member>
        <Member type="Property">public List&lt;NRDelegate&gt; Delegates { get; private set; }</Member>
        <Member type="Property">public List&lt;NRField&gt; Fields { get; private set; }</Member>
        <Member type="Property">public List&lt;NRMethod&gt; Methods { get; private set; }</Member>
        <Member type="Constructor">public NRModule()</Member>
        <Member type="Method">public void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRField</Name>
        <Access>Public</Access>
        <Location left="648" top="1839" />
        <Size width="162" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string InitialValue { get; set; }</Member>
        <Member type="Property">public FieldModifier FieldModifier { get; set; }</Member>
        <Member type="Property">public bool IsStatic { get; set; }</Member>
        <Member type="Property">public bool IsReadonly { get; set; }</Member>
        <Member type="Property">public bool IsConstant { get; set; }</Member>
        <Member type="Property">public bool IsHider { get; set; }</Member>
        <Member type="Property">public bool IsVolatile { get; set; }</Member>
        <Member type="Constructor">public NRField()</Member>
        <Member type="Method">public override void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NREnum</Name>
        <Access>Public</Access>
        <Location left="436" top="1839" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public List&lt;NREnumValue&gt; Values { get; private set; }</Member>
        <Member type="Property">public string UnderlyingType { get; set; }</Member>
        <Member type="Constructor">public NREnum()</Member>
        <Member type="Method">public override void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRClass</Name>
        <Access>Public</Access>
        <Location left="224" top="1839" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public ClassModifier ClassModifier { get; set; }</Member>
        <Member type="Constructor">public NRClass()</Member>
        <Member type="Method">public override void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRAssembly</Name>
        <Access>Public</Access>
        <Location left="12" top="1839" />
        <Size width="162" height="315" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string FullName { get; set; }</Member>
        <Member type="Property">public string Source { get; set; }</Member>
        <Member type="Property">public List&lt;NRModule&gt; Modules { get; private set; }</Member>
        <Member type="Property">public List&lt;NRAttribute&gt; Attributes { get; private set; }</Member>
        <Member type="Property">public List&lt;NRClass&gt; Classes { get; private set; }</Member>
        <Member type="Property">public List&lt;NRInterface&gt; Interfaces { get; private set; }</Member>
        <Member type="Property">public List&lt;NRStruct&gt; Structs { get; private set; }</Member>
        <Member type="Property">public List&lt;NREnum&gt; Enums { get; private set; }</Member>
        <Member type="Property">public List&lt;NRDelegate&gt; Delegates { get; private set; }</Member>
        <Member type="Property">public IEnumerable&lt;NRTypeBase&gt; Types { get; }</Member>
        <Member type="Property">public IEnumerable&lt;NRCompositeType&gt; CompositTypes { get; }</Member>
        <Member type="Property">public IEnumerable&lt;NRSingleInheritanceType&gt; SingleInheritanceTypes { get; }</Member>
        <Member type="Constructor">public NRAssembly()</Member>
        <Member type="Method">public void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Extensions</Name>
        <Access>Public</Access>
        <Location left="2132" top="964" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>Static</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRTypeParameter</Name>
        <Access>Public</Access>
        <Location left="1920" top="964" />
        <Size width="162" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string Name { get; set; }</Member>
        <Member type="Property">public List&lt;NRTypeUsage&gt; BaseTypes { get; private set; }</Member>
        <Member type="Property">public bool IsClass { get; set; }</Member>
        <Member type="Property">public bool IsStruct { get; set; }</Member>
        <Member type="Property">public bool IsConstructor { get; set; }</Member>
        <Member type="Property">public bool IsIn { get; set; }</Member>
        <Member type="Property">public bool IsOut { get; set; }</Member>
        <Member type="Property">public List&lt;NRAttribute&gt; Attributes { get; private set; }</Member>
        <Member type="Constructor">public NRTypeParameter()</Member>
        <Member type="Method">public void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRParameter</Name>
        <Access>Public</Access>
        <Location left="1708" top="964" />
        <Size width="162" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string Name { get; set; }</Member>
        <Member type="Property">public NRTypeUsage Type { get; set; }</Member>
        <Member type="Property">public string TypeFullName { get; set; }</Member>
        <Member type="Property">public ParameterModifier ParameterModifier { get; set; }</Member>
        <Member type="Property">public string DefaultValue { get; set; }</Member>
        <Member type="Property">public List&lt;NRAttribute&gt; Attributes { get; private set; }</Member>
        <Member type="Property">public bool IsExtensionParameter { get; set; }</Member>
        <Member type="Constructor">public NRParameter()</Member>
        <Member type="Method">public void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>StatisticFilter</Name>
        <Access>Public</Access>
        <Location left="1496" top="964" />
        <Size width="162" height="825" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public IFilter Filter { get; set; }</Member>
        <Member type="Property">public int ReflectedClasses { get; private set; }</Member>
        <Member type="Property">public int IgnoredClasses { get; private set; }</Member>
        <Member type="Property">public int ReflectedInterfaces { get; private set; }</Member>
        <Member type="Property">public int IgnoredInterfaces { get; private set; }</Member>
        <Member type="Property">public int ReflectedStructures { get; private set; }</Member>
        <Member type="Property">public int IgnoredStructures { get; private set; }</Member>
        <Member type="Property">public int ReflectedDelegates { get; private set; }</Member>
        <Member type="Property">public int IgnoredDelegates { get; private set; }</Member>
        <Member type="Property">public int ReflectedEnums { get; private set; }</Member>
        <Member type="Property">public int IgnoredEnums { get; private set; }</Member>
        <Member type="Property">public int ReflectedEnumValues { get; private set; }</Member>
        <Member type="Property">public int IgnoredEnumValues { get; private set; }</Member>
        <Member type="Property">public int ReflectedConstructors { get; private set; }</Member>
        <Member type="Property">public int IgnoredConstructors { get; private set; }</Member>
        <Member type="Property">public int ReflectedMethods { get; private set; }</Member>
        <Member type="Property">public int IgnoredMethods { get; private set; }</Member>
        <Member type="Property">public int ReflectedOperators { get; private set; }</Member>
        <Member type="Property">public int IgnoredOperators { get; private set; }</Member>
        <Member type="Property">public int ReflectedEvents { get; private set; }</Member>
        <Member type="Property">public int IgnoredEvents { get; private set; }</Member>
        <Member type="Property">public int ReflectedFields { get; private set; }</Member>
        <Member type="Property">public int IgnoredFields { get; private set; }</Member>
        <Member type="Property">public int ReflectedProperties { get; private set; }</Member>
        <Member type="Property">public int IgnoredProperties { get; private set; }</Member>
        <Member type="Property">public int ReflectedAttributes { get; private set; }</Member>
        <Member type="Property">public int IgnoredAttributes { get; private set; }</Member>
        <Member type="Property">public int ReflectedModules { get; private set; }</Member>
        <Member type="Property">public int IgnoredModules { get; private set; }</Member>
        <Member type="Constructor">public StatisticFilter(IFilter filter)</Member>
        <Member type="Method">public bool Reflect(NRClass nrClass)</Member>
        <Member type="Method">public bool Reflect(NRInterface nrInterface)</Member>
        <Member type="Method">public bool Reflect(NRStruct nrStruct)</Member>
        <Member type="Method">public bool Reflect(NRDelegate nrDelegate)</Member>
        <Member type="Method">public bool Reflect(NREnum nrEnum)</Member>
        <Member type="Method">public bool Reflect(NREnumValue nrEnumValue)</Member>
        <Member type="Method">public bool Reflect(NRConstructor nrConstructor)</Member>
        <Member type="Method">public bool Reflect(NRMethod nrMethod)</Member>
        <Member type="Method">public bool Reflect(NROperator nrOperator)</Member>
        <Member type="Method">public bool Reflect(NREvent nrEvent)</Member>
        <Member type="Method">public bool Reflect(NRField nrField)</Member>
        <Member type="Method">public bool Reflect(NRProperty nrProperty)</Member>
        <Member type="Method">public bool Reflect(NRAttribute nrAttribute)</Member>
        <Member type="Method">public bool Reflect(NRModule nrModule)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRAssociation</Name>
        <Access>Public</Access>
        <Location left="1284" top="964" />
        <Size width="162" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public NRTypeBase StartType { get; set; }</Member>
        <Member type="Property">public NRTypeBase EndType { get; set; }</Member>
        <Member type="Property">public string StartRole { get; set; }</Member>
        <Member type="Property">public string EndRole { get; set; }</Member>
        <Member type="Property">public string StartMultiplicity { get; set; }</Member>
        <Member type="Property">public string EndMultiplicity { get; set; }</Member>
        <Member type="Constructor">public NRAssociation()</Member>
        <Member type="Constructor">public NRAssociation(NRTypeBase startType, NRTypeBase endType)</Member>
        <Member type="Method">public override string ToString()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NROperator</Name>
        <Access>Public</Access>
        <Location left="1072" top="964" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public OperatorType OperatorType { get; set; }</Member>
        <Member type="Constructor">public NROperator()</Member>
        <Member type="Method">public override void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CSharp</Name>
        <Access>Public</Access>
        <Location left="860" top="964" />
        <Size width="162" height="332" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Dictionary&lt;string, string&gt; EscapeChars</Member>
        <Member type="Field">private Dictionary&lt;string, string&gt; TypeReplacement</Member>
        <Member type="Property">public static bool CreateAttributes { get; set; }</Member>
        <Member type="Property">public static bool UseNamespaces { get; set; }</Member>
        <Member type="Property">public static string[] KnownNamespaces { get; set; }</Member>
        <Member type="Constructor">static CSharp()</Member>
        <Member type="Method">private static string EscapeString(string value)</Member>
        <Member type="Method">private static string AddSpace(string text)</Member>
        <Member type="Method">private static string GetDeclaringTypes(NRTypeUsage declaringType)</Member>
        <Member type="Method">private static string GetAttribute(NRAttribute nrAttribute, bool returnAttribute = False)</Member>
        <Member type="Method">private static string GetAttributeValueString(NRAttributeValue value)</Member>
        <Member type="Method">private static string GetGenericDefinition(IGeneric generic)</Member>
        <Member type="Method">private static string GetGenericConstraint(IGeneric generic)</Member>
        <Member type="Method">private static string GetBaseTypeAndInterfaces(NRSingleInheritanceType nrSingleInheritanceType)</Member>
        <Member type="Method">private static string GetImplementedInterfaces(NRCompositeType nrCompositeType)</Member>
        <Modifier>Static</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRNesting</Name>
        <Access>Public</Access>
        <Location left="648" top="964" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public NRSingleInheritanceType ParentType { get; set; }</Member>
        <Member type="Property">public NRTypeBase InnerType { get; set; }</Member>
        <Member type="Constructor">public NRNesting()</Member>
        <Member type="Constructor">public NRNesting(NRSingleInheritanceType parentType, NRTypeBase innerType)</Member>
        <Member type="Method">public override string ToString()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>InvertFilter</Name>
        <Access>Public</Access>
        <Location left="436" top="964" />
        <Size width="162" height="349" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public IFilter Filter { get; set; }</Member>
        <Member type="Constructor">public InvertFilter(IFilter filter)</Member>
        <Member type="Method">public bool Reflect(NRClass nrClass)</Member>
        <Member type="Method">public bool Reflect(NRInterface nrInterface)</Member>
        <Member type="Method">public bool Reflect(NRStruct nrStruct)</Member>
        <Member type="Method">public bool Reflect(NRDelegate nrDelegate)</Member>
        <Member type="Method">public bool Reflect(NREnum nrEnum)</Member>
        <Member type="Method">public bool Reflect(NREnumValue nrEnumValue)</Member>
        <Member type="Method">public bool Reflect(NRMethod nrMethod)</Member>
        <Member type="Method">public bool Reflect(NROperator nrOperator)</Member>
        <Member type="Method">public bool Reflect(NREvent nrEvent)</Member>
        <Member type="Method">public bool Reflect(NRField nrField)</Member>
        <Member type="Method">public bool Reflect(NRConstructor nrConstructor)</Member>
        <Member type="Method">public bool Reflect(NRProperty nrProperty)</Member>
        <Member type="Method">public bool Reflect(NRAttribute nrAttribute)</Member>
        <Member type="Method">public bool Reflect(NRModule nrModule)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRGeneralization</Name>
        <Access>Public</Access>
        <Location left="224" top="964" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public NRCompositeType BaseType { get; set; }</Member>
        <Member type="Property">public NRCompositeType DerivedType { get; set; }</Member>
        <Member type="Constructor">public NRGeneralization()</Member>
        <Member type="Constructor">public NRGeneralization(NRCompositeType baseType, NRCompositeType derivedType)</Member>
        <Member type="Method">public override string ToString()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NREvent</Name>
        <Access>Public</Access>
        <Location left="12" top="964" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public NREvent()</Member>
        <Member type="Method">public override void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ReflectAllFilter</Name>
        <Access>Public</Access>
        <Location left="2132" top="582" />
        <Size width="162" height="332" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public ReflectAllFilter()</Member>
        <Member type="Method">public bool Reflect(NRClass nrClass)</Member>
        <Member type="Method">public bool Reflect(NRInterface nrInterface)</Member>
        <Member type="Method">public bool Reflect(NRStruct nrStruct)</Member>
        <Member type="Method">public bool Reflect(NRDelegate nrDelegate)</Member>
        <Member type="Method">public bool Reflect(NREnum nrEnum)</Member>
        <Member type="Method">public bool Reflect(NREnumValue nrEnumValue)</Member>
        <Member type="Method">public bool Reflect(NRMethod nrMethod)</Member>
        <Member type="Method">public bool Reflect(NROperator nrOperator)</Member>
        <Member type="Method">public bool Reflect(NREvent nrEvent)</Member>
        <Member type="Method">public bool Reflect(NRField nrField)</Member>
        <Member type="Method">public bool Reflect(NRConstructor nrConstructor)</Member>
        <Member type="Method">public bool Reflect(NRProperty nrProperty)</Member>
        <Member type="Method">public bool Reflect(NRAttribute nrAttribute)</Member>
        <Member type="Method">public bool Reflect(NRModule nrModule)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRDelegate</Name>
        <Access>Public</Access>
        <Location left="1920" top="582" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public NRTypeUsage ReturnType { get; set; }</Member>
        <Member type="Property">public List&lt;NRParameter&gt; Parameters { get; private set; }</Member>
        <Member type="Constructor">public NRDelegate()</Member>
        <Member type="Method">public override void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Reflector</Name>
        <Access>Public</Access>
        <Location left="1708" top="582" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">private IFilter Filter { get; set; }</Member>
        <Member type="Constructor">public Reflector()</Member>
        <Member type="Method">public NRAssembly Reflect(string fileName, bool useNewAppDomain = True)</Member>
        <Member type="Method">public NRAssembly Reflect(string fileName, ref IFilter filter, bool useNewAppDomain = True)</Member>
        <Member type="Method">private NRAssembly Reflect(string fileName)</Member>
        <Member type="Method">public NRAssembly Reflect(Assembly assembly)</Member>
        <Member type="Method">public NRAssembly Reflect(Assembly assembly, ref IFilter filter)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRTypeUsage</Name>
        <Access>Public</Access>
        <Location left="1496" top="582" />
        <Size width="162" height="281" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string Name { get; set; }</Member>
        <Member type="Property">public string Namespace { get; set; }</Member>
        <Member type="Property">public string FullName { get; set; }</Member>
        <Member type="Property">public NRTypeUsage DeclaringType { get; set; }</Member>
        <Member type="Property">public List&lt;NRTypeUsage&gt; GenericParameters { get; private set; }</Member>
        <Member type="Property">public bool IsArray { get; }</Member>
        <Member type="Property">public List&lt;int&gt; ArrayRanks { get; private set; }</Member>
        <Member type="Property">public bool IsDynamic { get; set; }</Member>
        <Member type="Property">public bool IsNullable { get; set; }</Member>
        <Member type="Property">public bool IsGeneric { get; }</Member>
        <Member type="Constructor">public NRTypeUsage()</Member>
        <Member type="Method">public void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRRealization</Name>
        <Access>Public</Access>
        <Location left="1284" top="582" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public NRInterface BaseType { get; set; }</Member>
        <Member type="Property">public NRSingleInheritanceType ImplementingType { get; set; }</Member>
        <Member type="Constructor">public NRRealization()</Member>
        <Member type="Constructor">public NRRealization(NRInterface baseType, NRSingleInheritanceType implementingType)</Member>
        <Member type="Method">public override string ToString()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRMethod</Name>
        <Access>Public</Access>
        <Location left="1072" top="582" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public bool IsExtensionMethod { get; set; }</Member>
        <Member type="Property">public List&lt;NRTypeParameter&gt; GenericTypes { get; private set; }</Member>
        <Member type="Property">public bool IsGeneric { get; }</Member>
        <Member type="Constructor">public NRMethod()</Member>
        <Member type="Method">public override void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NREnumValue</Name>
        <Access>Public</Access>
        <Location left="860" top="582" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string Name { get; set; }</Member>
        <Member type="Property">public string Value { get; set; }</Member>
        <Member type="Property">public List&lt;NRAttribute&gt; Attributes { get; private set; }</Member>
        <Member type="Constructor">public NREnumValue()</Member>
        <Member type="Method">public void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRConstructor</Name>
        <Access>Public</Access>
        <Location left="648" top="582" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public NRConstructor()</Member>
        <Member type="Method">public override void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>RelationshipCreator</Name>
        <Access>Public</Access>
        <Location left="436" top="582" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public RelationshipCreator()</Member>
        <Member type="Method">public NRRelationships CreateRelationships(NRAssembly nrAssembly, bool createNesting = True, bool createGeneralization = True, bool createRealization = True, bool createAssociation = True)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRAttributeValue</Name>
        <Access>Public</Access>
        <Location left="224" top="582" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string Type { get; set; }</Member>
        <Member type="Property">public object Value { get; set; }</Member>
        <Member type="Constructor">public NRAttributeValue()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRRelationships</Name>
        <Access>Public</Access>
        <Location left="12" top="582" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public List&lt;NRNesting&gt; Nestings { get; private set; }</Member>
        <Member type="Property">public List&lt;NRGeneralization&gt; Generalizations { get; private set; }</Member>
        <Member type="Property">public List&lt;NRRealization&gt; Realizations { get; private set; }</Member>
        <Member type="Property">public List&lt;NRAssociation&gt; Associations { get; private set; }</Member>
        <Member type="Constructor">public NRRelationships()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>IncludeFilter</Name>
        <Access>Public</Access>
        <Location left="2132" top="12" />
        <Size width="162" height="417" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public List&lt;FilterRule&gt; Rules { get; set; }</Member>
        <Member type="Constructor">public IncludeFilter()</Member>
        <Member type="Method">public bool Reflect(NRClass nrClass)</Member>
        <Member type="Method">public bool Reflect(NRInterface nrInterface)</Member>
        <Member type="Method">public bool Reflect(NRStruct nrStruct)</Member>
        <Member type="Method">public bool Reflect(NRDelegate nrDelegate)</Member>
        <Member type="Method">public bool Reflect(NREnum nrEnum)</Member>
        <Member type="Method">public bool Reflect(NREnumValue nrEnumValue)</Member>
        <Member type="Method">public bool Reflect(NRConstructor nrConstructor)</Member>
        <Member type="Method">public bool Reflect(NRMethod nrMethod)</Member>
        <Member type="Method">public bool Reflect(NROperator nrOperator)</Member>
        <Member type="Method">public bool Reflect(NREvent nrEvent)</Member>
        <Member type="Method">public bool Reflect(NRField nrField)</Member>
        <Member type="Method">public bool Reflect(NRProperty nrProperty)</Member>
        <Member type="Method">public bool Reflect(NRAttribute nrAttribute)</Member>
        <Member type="Method">public bool Reflect(NRModule nrModule)</Member>
        <Member type="Method">private bool Reflect(FilterElements nrElement, NRTypeBase nrType)</Member>
        <Member type="Method">private bool Reflect(FilterElements nrElement, NROperation nrOperation)</Member>
        <Member type="Method">private bool RuleMatch(FilterElements element, FilterModifiers modifier)</Member>
        <Member type="Method">private static FilterModifiers GetFilterModifier(AccessModifier accessModifier)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRStruct</Name>
        <Access>Public</Access>
        <Location left="1920" top="12" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public NRStruct()</Member>
        <Member type="Method">public override void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Structure">
        <Name>FilterRule</Name>
        <Access>Public</Access>
        <Location left="1708" top="12" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public FilterModifiers Modifier { get; set; }</Member>
        <Member type="Property">public FilterElements Element { get; set; }</Member>
        <Member type="Constructor">public FilterRule(FilterModifiers modifier, FilterElements element)</Member>
      </Entity>
      <Entity type="Enum">
        <Name>ParameterModifier</Name>
        <Access>Public</Access>
        <Location left="1496" top="12" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>In = 0</Value>
        <Value>InOut = 1</Value>
        <Value>Out = 2</Value>
        <Value>Params = 3</Value>
        <Value>Optional = 4</Value>
      </Entity>
      <Entity type="Enum">
        <Name>OperationModifier</Name>
        <Access>Public</Access>
        <Location left="1284" top="12" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>None = 0</Value>
        <Value>Static = 1</Value>
        <Value>Virtual = 2</Value>
        <Value>Abstract = 4</Value>
        <Value>Override = 8</Value>
        <Value>Sealed = 16</Value>
        <Value>Hider = 32</Value>
      </Entity>
      <Entity type="Enum">
        <Name>FieldModifier</Name>
        <Access>Public</Access>
        <Location left="1072" top="12" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>None = 0</Value>
        <Value>Static = 1</Value>
        <Value>Readonly = 2</Value>
        <Value>Constant = 4</Value>
        <Value>Hider = 8</Value>
        <Value>Volatile = 16</Value>
      </Entity>
      <Entity type="Enum">
        <Name>ClassModifier</Name>
        <Access>Public</Access>
        <Location left="860" top="12" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>None = 0</Value>
        <Value>Abstract = 1</Value>
        <Value>Sealed = 2</Value>
        <Value>Static = 3</Value>
      </Entity>
      <Entity type="Enum">
        <Name>OperatorType</Name>
        <Access>Public</Access>
        <Location left="648" top="12" />
        <Size width="162" height="520" />
        <Collapsed>False</Collapsed>
        <Value>UnaryPlus = 0</Value>
        <Value>UnaryNegation = 1</Value>
        <Value>LogicalNot = 2</Value>
        <Value>OnesComplement = 3</Value>
        <Value>Increment = 4</Value>
        <Value>Decrement = 5</Value>
        <Value>True = 6</Value>
        <Value>False = 7</Value>
        <Value>Addition = 8</Value>
        <Value>Subtraction = 9</Value>
        <Value>Multiply = 10</Value>
        <Value>Division = 11</Value>
        <Value>Modulus = 12</Value>
        <Value>BitwiseAnd = 13</Value>
        <Value>BitwiseOr = 14</Value>
        <Value>ExclusiveOr = 15</Value>
        <Value>LeftShift = 16</Value>
        <Value>RightShift = 17</Value>
        <Value>Equality = 18</Value>
        <Value>Inequality = 19</Value>
        <Value>LessThan = 20</Value>
        <Value>GreaterThan = 21</Value>
        <Value>LessThanOrEqual = 22</Value>
        <Value>GreaterThanOrEqual = 23</Value>
        <Value>Implicit = 24</Value>
        <Value>Explicit = 25</Value>
        <Value>Unknown = -1</Value>
      </Entity>
      <Entity type="Enum">
        <Name>FilterModifiers</Name>
        <Access>Public</Access>
        <Location left="436" top="12" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>AllModifiers = 0</Value>
        <Value>Private = 1</Value>
        <Value>Public = 2</Value>
        <Value>Protected = 4</Value>
        <Value>Internal = 8</Value>
        <Value>ProtectedInternal = 16</Value>
        <Value>Static = 32</Value>
        <Value>Instance = 64</Value>
        <Value>Default = 128</Value>
      </Entity>
      <Entity type="Enum">
        <Name>FilterElements</Name>
        <Access>Public</Access>
        <Location left="224" top="12" />
        <Size width="162" height="333" />
        <Collapsed>False</Collapsed>
        <Value>AllElements = 0</Value>
        <Value>Class = 1</Value>
        <Value>Struct = 2</Value>
        <Value>Interface = 3</Value>
        <Value>Enum = 4</Value>
        <Value>EnumValue = 5</Value>
        <Value>Delegate = 6</Value>
        <Value>Field = 7</Value>
        <Value>Constant = 8</Value>
        <Value>Property = 9</Value>
        <Value>Constructor = 10</Value>
        <Value>Method = 11</Value>
        <Value>Operator = 12</Value>
        <Value>Event = 13</Value>
        <Value>Attribute = 14</Value>
        <Value>Module = 15</Value>
      </Entity>
      <Entity type="Enum">
        <Name>AccessModifier</Name>
        <Access>Public</Access>
        <Location left="12" top="12" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>Default = 0</Value>
        <Value>Public = 1</Value>
        <Value>ProtectedInternal = 2</Value>
        <Value>Internal = 3</Value>
        <Value>Protected = 4</Value>
        <Value>Private = 5</Value>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Generalization" first="9" second="8">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="10" second="9">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="11" second="9">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="13" second="12">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="14" second="13">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="15" second="14">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="16" second="14">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="20" second="8">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="21" second="12">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="22" second="15">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="29" second="10">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="34" second="9">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="36" second="13">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="40" second="10">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="42" second="9">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="47" second="15">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="8" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="8" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="12" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="12" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="13" second="2">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="14" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="15" second="4">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="17" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="19" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="19" second="5">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="19" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="19" second="4">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="19" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="23" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="23" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="23" second="5">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="25" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="25" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="26" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="26" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="27" second="6">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="32" second="6">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="35" second="6">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="38" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="40" second="2">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="41" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="41" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="46" second="6">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
    <Name>NReflect.Visitors.dll</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>VisitorBase</Name>
        <Access>Public</Access>
        <Location left="44" top="35" />
        <Size width="268" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Field">protected TextWriter writer</Member>
        <Member type="Field">protected int indent</Member>
        <Member type="Property">public int IndentSize { get; set; }</Member>
        <Member type="Property">public char IndentChar { get; set; }</Member>
        <Member type="Constructor">protected VisitorBase(TextWriter writer)</Member>
        <Member type="Method">protected void Output(string text)</Member>
        <Member type="Method">protected void Output(string text, int indention)</Member>
        <Member type="Method">protected void OutputLine(string text)</Member>
        <Member type="Method">protected void OutputLine(string text, int indention)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>PrintVisitor</Name>
        <Access>Public</Access>
        <Location left="44" top="340" />
        <Size width="495" height="706" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public PrintVisitor()</Member>
        <Member type="Constructor">public PrintVisitor(TextWriter writer)</Member>
        <Member type="Method">public void Visit(NRAssembly nrAssembly)</Member>
        <Member type="Method">public void Visit(NRClass nrClass)</Member>
        <Member type="Method">public void Visit(NRInterface nrInterface)</Member>
        <Member type="Method">public void Visit(NRDelegate nrDelegate)</Member>
        <Member type="Method">public void Visit(NRStruct nrStruct)</Member>
        <Member type="Method">public void Visit(NREnum nrEnum)</Member>
        <Member type="Method">public void Visit(NRField nrField)</Member>
        <Member type="Method">public void Visit(NRProperty nrProperty)</Member>
        <Member type="Method">public void Visit(NRMethod nrMethod)</Member>
        <Member type="Method">public void Visit(NROperator nrOperator)</Member>
        <Member type="Method">public void Visit(NRConstructor nrConstructor)</Member>
        <Member type="Method">public void Visit(NREvent nrEvent)</Member>
        <Member type="Method">public void Visit(NRParameter nrParameter)</Member>
        <Member type="Method">public void Visit(NRTypeParameter nrTypeParameter)</Member>
        <Member type="Method">public void Visit(NREnumValue nrEnumValue)</Member>
        <Member type="Method">public void Visit(NRAttribute nrAttribute)</Member>
        <Member type="Method">public void Visit(NRModule nrModule)</Member>
        <Member type="Method">public void Visit(NRTypeUsage nrTypeUsage)</Member>
        <Member type="Method">private void VisitTypeParameters(IGeneric generic)</Member>
        <Member type="Method">private void VisitAttributes(IAttributable attributable)</Member>
        <Member type="Method">private void VisitReturnValueAttributes(NRReturnValueOperation nrReturnValueOperation)</Member>
        <Member type="Method">private void PrintBaseTypeAndInterfaces(NRSingleInheritanceType nrSingleInheritanceType)</Member>
        <Member type="Method">private void PrintImplementedInterfaces(NRCompositeType nrCompositeType)</Member>
        <Member type="Method">private void PrintEntities(IEntityContainer entityContainer)</Member>
        <Member type="Method">private void PrintEntities(string entityType, IEnumerable&lt;NRTypeBase&gt; types)</Member>
        <Member type="Method">private void PrintParameters(List&lt;NRParameter&gt; nrParameters, bool fromExtensionMethod = False)</Member>
        <Member type="Method">private static string ToString(AccessModifier accessModifier)</Member>
        <Member type="Method">private static string ToString(ClassModifier classModifier)</Member>
        <Member type="Method">private static string ToString(ParameterModifier parameterModifier)</Member>
        <Member type="Method">private static string ToString(OperationModifier operationModifier)</Member>
        <Member type="Method">private static string ToString(FieldModifier fieldModifier)</Member>
        <Member type="Method">private string ToString(NRTypeUsage nrTypeUsage)</Member>
        <Member type="Method">private static string GetAttribute(NRAttribute nrAttribute, bool returnAttribute = False)</Member>
        <Member type="Method">private static string GetAttributeValueString(NRAttributeValue value)</Member>
        <Member type="Method">private static string GetGenericDefinition(IGeneric generic)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CSharpVisitor</Name>
        <Access>Public</Access>
        <Location left="1009" top="340" />
        <Size width="486" height="587" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private NRTypeBase currentType</Member>
        <Member type="Property">public bool NewLineAfterType { get; set; }</Member>
        <Member type="Property">public bool NewLineAfterMember { get; set; }</Member>
        <Member type="Property">public string[] KnownNamespaces { get; set; }</Member>
        <Member type="Property">public NRAssembly NRAssembly { get; set; }</Member>
        <Member type="Constructor">public CSharpVisitor()</Member>
        <Member type="Constructor">public CSharpVisitor(TextWriter writer)</Member>
        <Member type="Method">public void Visit(NRAssembly nrAssembly)</Member>
        <Member type="Method">public void Visit(NRClass nrClass)</Member>
        <Member type="Method">public void Visit(NRInterface nrInterface)</Member>
        <Member type="Method">public void Visit(NRDelegate nrDelegate)</Member>
        <Member type="Method">public void Visit(NRStruct nrStruct)</Member>
        <Member type="Method">public void Visit(NREnum nrEnum)</Member>
        <Member type="Method">public void Visit(NRField nrField)</Member>
        <Member type="Method">public void Visit(NRProperty nrProperty)</Member>
        <Member type="Method">public void Visit(NRMethod nrMethod)</Member>
        <Member type="Method">public void Visit(NROperator nrOperator)</Member>
        <Member type="Method">public void Visit(NRConstructor nrConstructor)</Member>
        <Member type="Method">public void Visit(NREvent nrEvent)</Member>
        <Member type="Method">public void Visit(NRParameter nrParameter)</Member>
        <Member type="Method">public void Visit(NRTypeParameter nrTypeParameter)</Member>
        <Member type="Method">public void Visit(NREnumValue nrEnumValue)</Member>
        <Member type="Method">public void Visit(NRAttribute nrAttribute)</Member>
        <Member type="Method">public void Visit(NRModule nrModule)</Member>
        <Member type="Method">public void Visit(NRTypeUsage nrTypeUsage)</Member>
        <Member type="Method">private void VisitNestedTypes(NRTypeBase declaringType)</Member>
        <Member type="Method">private void VisitAttributes(IAttributable attributable)</Member>
        <Member type="Method">private void VisitReturnValueAttributes(NRReturnValueOperation nrReturnValueOperation)</Member>
        <Member type="Method">private void OutputEmptyLineAfterType()</Member>
        <Member type="Method">private void OutputEmptyLineAfterMember()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>PrintTreeVisitor</Name>
        <Access>Public</Access>
        <Location left="565" top="340" />
        <Size width="421" height="553" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public PrintTreeVisitor()</Member>
        <Member type="Constructor">public PrintTreeVisitor(TextWriter writer)</Member>
        <Member type="Method">public void Visit(NRAssembly nrAssembly)</Member>
        <Member type="Method">public void Visit(NRClass nrClass)</Member>
        <Member type="Method">public void Visit(NRInterface nrInterface)</Member>
        <Member type="Method">public void Visit(NRDelegate nrDelegate)</Member>
        <Member type="Method">public void Visit(NRStruct nrStruct)</Member>
        <Member type="Method">public void Visit(NREnum nrEnum)</Member>
        <Member type="Method">public void Visit(NRField nrField)</Member>
        <Member type="Method">public void Visit(NRProperty nrProperty)</Member>
        <Member type="Method">public void Visit(NRMethod nrMethod)</Member>
        <Member type="Method">public void Visit(NROperator nrOperator)</Member>
        <Member type="Method">public void Visit(NRConstructor nrConstructor)</Member>
        <Member type="Method">public void Visit(NREvent nrEvent)</Member>
        <Member type="Method">public void Visit(NRParameter nrParameter)</Member>
        <Member type="Method">public void Visit(NRTypeParameter nrTypeParameter)</Member>
        <Member type="Method">public void Visit(NREnumValue nrEnumValue)</Member>
        <Member type="Method">public void Visit(NRAttribute nrAttribute)</Member>
        <Member type="Method">public void Visit(NRModule nrModule)</Member>
        <Member type="Method">public void Visit(NRTypeUsage nrTypeUsage)</Member>
        <Member type="Method">private void VisitEnities(IEntityContainer entityContainer)</Member>
        <Member type="Method">private void PrintMembers(NRReturnValueOperation nrReturnValueOperation)</Member>
        <Member type="Method">private void PrintMembers(NROperation nrOperation)</Member>
        <Member type="Method">private void PrintMembers(NRMember nrMember)</Member>
        <Member type="Method">private void PrintMembers(NRSingleInheritanceType nrSingleInheritanceType)</Member>
        <Member type="Method">private void PrintMembers(NRCompositeType nrCompositeType)</Member>
        <Member type="Method">private void PrintMembers(NRGenericType nrGenericType)</Member>
        <Member type="Method">private void PrintMembers(NRTypeBase nrTypeBase)</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Generalization" first="1" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="2" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="3" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
</Project>