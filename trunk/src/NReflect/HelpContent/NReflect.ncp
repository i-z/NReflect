<Project>
  <Name>NReflect</Name>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
    <Name>Members</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>NRConstructor</Name>
        <Access>Public</Access>
        <Location left="67" top="593" />
        <Size width="189" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public NRConstructor()</Member>
        <Member type="Method">public override Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NREnumValue</Name>
        <Access>Public</Access>
        <Location left="892" top="164" />
        <Size width="189" height="145" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public String Name { get; set; }</Member>
        <Member type="Property">public String Value { get; set; }</Member>
        <Member type="Constructor">public NREnumValue()</Member>
        <Member type="Method">public Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NREvent</Name>
        <Access>Public</Access>
        <Location left="784" top="593" />
        <Size width="189" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public NREvent()</Member>
        <Member type="Method">public override Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NROperator</Name>
        <Access>Public</Access>
        <Location left="1004" top="593" />
        <Size width="189" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public NROperator()</Member>
        <Member type="Method">public override Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRMethod</Name>
        <Access>Public</Access>
        <Location left="278" top="593" />
        <Size width="189" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public NRMethod()</Member>
        <Member type="Method">public override Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRProperty</Name>
        <Access>Public</Access>
        <Location left="496" top="593" />
        <Size width="263" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public AccessModifier GetterModifier { get; set; }</Member>
        <Member type="Property">public AccessModifier SetterModifier { get; set; }</Member>
        <Member type="Property">public Boolean HasGetter { get; set; }</Member>
        <Member type="Property">public Boolean HasSetter { get; set; }</Member>
        <Member type="Constructor">public NRProperty()</Member>
        <Member type="Method">public override Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NROperation</Name>
        <Access>Public</Access>
        <Location left="67" top="268" />
        <Size width="302" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public OperationModifier OperationModifier { get; set; }</Member>
        <Member type="Property">public Boolean IsStatic { get; set; }</Member>
        <Member type="Property">public Boolean IsAbstract { get; set; }</Member>
        <Member type="Property">public Boolean IsVirtual { get; set; }</Member>
        <Member type="Property">public Boolean IsOverride { get; set; }</Member>
        <Member type="Property">public Boolean IsHider { get; set; }</Member>
        <Member type="Property">public Boolean IsSealed { get; set; }</Member>
        <Member type="Property">public List&lt;NRParameter&gt; Parameters { get; private set; }</Member>
        <Member type="Constructor">protected NROperation()</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRField</Name>
        <Access>Public</Access>
        <Location left="451" top="268" />
        <Size width="245" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public String InitialValue { get; set; }</Member>
        <Member type="Property">public FieldModifier FieldModifier { get; set; }</Member>
        <Member type="Property">public Boolean IsStatic { get; set; }</Member>
        <Member type="Property">public Boolean IsReadonly { get; set; }</Member>
        <Member type="Property">public Boolean IsConstant { get; set; }</Member>
        <Member type="Property">public Boolean IsHider { get; set; }</Member>
        <Member type="Property">public Boolean IsVolatile { get; set; }</Member>
        <Member type="Constructor">public NRField()</Member>
        <Member type="Method">public override Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRMember</Name>
        <Access>Public</Access>
        <Location left="67" top="27" />
        <Size width="302" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public AccessModifier AccessModifier { get; set; }</Member>
        <Member type="Property">public String Name { get; set; }</Member>
        <Member type="Property">public String Type { get; set; }</Member>
        <Member type="Property">public String TypeFullName { get; set; }</Member>
        <Member type="Constructor">protected NRMember()</Member>
        <Member type="Method">public abstract Void Accept(IVisitor visitor)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Generalization" first="0" second="6">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>161</X>
          <Y>568</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>218</X>
          <Y>523</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="2" second="6">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="3" second="6">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="4" second="6">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>375</X>
          <Y>568</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>218</X>
          <Y>523</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="5" second="6">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>628</X>
          <Y>568</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>218</X>
          <Y>523</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="6" second="8">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>219</X>
          <Y>243</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>219</X>
          <Y>231</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="7" second="8">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>574</X>
          <Y>243</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>219</X>
          <Y>231</Y>
        </BendPoint>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
    <Name>Types</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>NRTypeBase</Name>
        <Access>Public</Access>
        <Location left="514" top="38" />
        <Size width="292" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public String Name { get; set; }</Member>
        <Member type="Property">public String FullName { get; set; }</Member>
        <Member type="Property">public AccessModifier AccessModifier { get; set; }</Member>
        <Member type="Property">public String Parent { get; set; }</Member>
        <Member type="Constructor">protected NRTypeBase()</Member>
        <Member type="Method">public abstract Void Accept(IVisitor visitor)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NREnum</Name>
        <Access>Public</Access>
        <Location left="1221" top="269" />
        <Size width="269" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public List&lt;NREnumValue&gt; Values { get; private set; }</Member>
        <Member type="Constructor">public NREnum()</Member>
        <Member type="Method">public override Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRDelegate</Name>
        <Access>Public</Access>
        <Location left="904" top="269" />
        <Size width="269" height="145" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public String ReturnType { get; set; }</Member>
        <Member type="Property">public List&lt;NRParameter&gt; Parameters { get; private set; }</Member>
        <Member type="Constructor">public NRDelegate()</Member>
        <Member type="Method">public override Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRCompositeType</Name>
        <Access>Public</Access>
        <Location left="514" top="269" />
        <Size width="292" height="145" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public List&lt;NRProperty&gt; Properties { get; private set; }</Member>
        <Member type="Property">public List&lt;NREvent&gt; Events { get; private set; }</Member>
        <Member type="Property">public List&lt;NRMethod&gt; Methods { get; private set; }</Member>
        <Member type="Constructor">protected NRCompositeType()</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRSingleInheritanceType</Name>
        <Access>Public</Access>
        <Location left="514" top="467" />
        <Size width="292" height="196" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public String BaseType { get; set; }</Member>
        <Member type="Property">public List&lt;String&gt; ImplementedInterfaces { get; private set; }</Member>
        <Member type="Property">public List&lt;NRTypeBase&gt; NestedTypes { get; private set; }</Member>
        <Member type="Property">public List&lt;NRConstructor&gt; Constructors { get; private set; }</Member>
        <Member type="Property">public List&lt;NROperator&gt; Operators { get; private set; }</Member>
        <Member type="Property">public List&lt;NRField&gt; Fields { get; private set; }</Member>
        <Member type="Constructor">protected NRSingleInheritanceType()</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRStruct</Name>
        <Access>Public</Access>
        <Location left="904" top="720" />
        <Size width="269" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public NRStruct()</Member>
        <Member type="Method">public override Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRInterface</Name>
        <Access>Public</Access>
        <Location left="904" top="467" />
        <Size width="269" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public NRInterface()</Member>
        <Member type="Method">public override Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRClass</Name>
        <Access>Public</Access>
        <Location left="1221" top="720" />
        <Size width="269" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public ClassModifier ClassModifier { get; set; }</Member>
        <Member type="Constructor">public NRClass()</Member>
        <Member type="Method">public override Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Generalization" first="1" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1358</X>
          <Y>244</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>660</X>
          <Y>242</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="2" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>660</X>
          <Y>242</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="3" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="4" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>659</X>
          <Y>442</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>659</X>
          <Y>443</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="5" second="4">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>999</X>
          <Y>695</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>660</X>
          <Y>688</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="6" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>998</X>
          <Y>442</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>659</X>
          <Y>439</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="7" second="4">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1343</X>
          <Y>695</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>660</X>
          <Y>688</Y>
        </BendPoint>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
    <Name>NReflect.dll</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Interface">
        <Name>IVisitable</Name>
        <Access>Public</Access>
        <Location left="648" top="2323" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">Void Accept(IVisitor visitor)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IFilter</Name>
        <Access>Public</Access>
        <Location left="436" top="2323" />
        <Size width="162" height="265" />
        <Collapsed>False</Collapsed>
        <Member type="Method">Boolean Reflect(NRClass nrClass)</Member>
        <Member type="Method">Boolean Reflect(NRInterface nrInterface)</Member>
        <Member type="Method">Boolean Reflect(NRStruct nrStruct)</Member>
        <Member type="Method">Boolean Reflect(NRDelegate nrDelegate)</Member>
        <Member type="Method">Boolean Reflect(NREnum nrEnum)</Member>
        <Member type="Method">Boolean Reflect(NREnumValue nrEnumValue)</Member>
        <Member type="Method">Boolean Reflect(NRConstructor nrConstructor)</Member>
        <Member type="Method">Boolean Reflect(NRMethod nrMethod)</Member>
        <Member type="Method">Boolean Reflect(NROperator nrOperator)</Member>
        <Member type="Method">Boolean Reflect(NREvent nrEvent)</Member>
        <Member type="Method">Boolean Reflect(NRField nrField)</Member>
        <Member type="Method">Boolean Reflect(NRProperty nrProperty)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IVisitor</Name>
        <Access>Public</Access>
        <Location left="224" top="2323" />
        <Size width="162" height="299" />
        <Collapsed>False</Collapsed>
        <Member type="Method">Void Visit(NRAssembly nrAssembly)</Member>
        <Member type="Method">Void Visit(NRClass nrClass)</Member>
        <Member type="Method">Void Visit(NRInterface nrInterface)</Member>
        <Member type="Method">Void Visit(NRDelegate nrDelegate)</Member>
        <Member type="Method">Void Visit(NRStruct nrStruct)</Member>
        <Member type="Method">Void Visit(NREnum nrEnum)</Member>
        <Member type="Method">Void Visit(NRField nrField)</Member>
        <Member type="Method">Void Visit(NRProperty nrProperty)</Member>
        <Member type="Method">Void Visit(NRMethod nrMethod)</Member>
        <Member type="Method">Void Visit(NROperator nrMethod)</Member>
        <Member type="Method">Void Visit(NRConstructor nrConstructor)</Member>
        <Member type="Method">Void Visit(NREvent nrEvent)</Member>
        <Member type="Method">Void Visit(NRParameter nrParameter)</Member>
        <Member type="Method">Void Visit(NREnumValue nrEnumValue)</Member>
      </Entity>
      <Entity type="Class">
        <Name>NRParameter</Name>
        <Access>Public</Access>
        <Location left="12" top="2323" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public String Name { get; set; }</Member>
        <Member type="Property">public String Type { get; set; }</Member>
        <Member type="Property">public String TypeFullName { get; set; }</Member>
        <Member type="Property">public ParameterModifier ParameterModifier { get; set; }</Member>
        <Member type="Property">public String DefaultValue { get; set; }</Member>
        <Member type="Constructor">public NRParameter()</Member>
        <Member type="Method">public Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>InvertFilter</Name>
        <Access>Public</Access>
        <Location left="1920" top="1890" />
        <Size width="162" height="315" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public IFilter Filter { get; set; }</Member>
        <Member type="Constructor">public InvertFilter(IFilter filter)</Member>
        <Member type="Method">public Boolean Reflect(NRClass nrClass)</Member>
        <Member type="Method">public Boolean Reflect(NRInterface nrInterface)</Member>
        <Member type="Method">public Boolean Reflect(NRStruct nrStruct)</Member>
        <Member type="Method">public Boolean Reflect(NRDelegate nrDelegate)</Member>
        <Member type="Method">public Boolean Reflect(NREnum nrEnum)</Member>
        <Member type="Method">public Boolean Reflect(NREnumValue nrEnumValue)</Member>
        <Member type="Method">public Boolean Reflect(NRMethod nrMethod)</Member>
        <Member type="Method">public Boolean Reflect(NROperator nrOperator)</Member>
        <Member type="Method">public Boolean Reflect(NREvent nrEvent)</Member>
        <Member type="Method">public Boolean Reflect(NRField nrField)</Member>
        <Member type="Method">public Boolean Reflect(NRConstructor nrConstructor)</Member>
        <Member type="Method">public Boolean Reflect(NRProperty nrProperty)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>IncludeFilter</Name>
        <Access>Public</Access>
        <Location left="1708" top="1890" />
        <Size width="162" height="383" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public List&lt;FilterRule&gt; Rules { get; set; }</Member>
        <Member type="Constructor">public IncludeFilter()</Member>
        <Member type="Method">public Boolean Reflect(NRClass nrClass)</Member>
        <Member type="Method">public Boolean Reflect(NRInterface nrInterface)</Member>
        <Member type="Method">public Boolean Reflect(NRStruct nrStruct)</Member>
        <Member type="Method">public Boolean Reflect(NRDelegate nrDelegate)</Member>
        <Member type="Method">public Boolean Reflect(NREnum nrEnum)</Member>
        <Member type="Method">public Boolean Reflect(NREnumValue nrEnumValue)</Member>
        <Member type="Method">public Boolean Reflect(NRConstructor nrConstructor)</Member>
        <Member type="Method">public Boolean Reflect(NRMethod nrMethod)</Member>
        <Member type="Method">public Boolean Reflect(NROperator nrOperator)</Member>
        <Member type="Method">public Boolean Reflect(NREvent nrEvent)</Member>
        <Member type="Method">public Boolean Reflect(NRField nrField)</Member>
        <Member type="Method">public Boolean Reflect(NRProperty nrProperty)</Member>
        <Member type="Method">private Boolean Reflect(FilterElements nrElement, NRTypeBase nrType)</Member>
        <Member type="Method">private Boolean Reflect(FilterElements nrElement, NROperation nrOperation)</Member>
        <Member type="Method">private Boolean RuleMatch(FilterElements element, FilterModifiers modifier)</Member>
        <Member type="Method">private static FilterModifiers GetFilterModifier(AccessModifier accessModifier)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRMember</Name>
        <Access>Public</Access>
        <Location left="1496" top="1890" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public AccessModifier AccessModifier { get; set; }</Member>
        <Member type="Property">public String Name { get; set; }</Member>
        <Member type="Property">public String Type { get; set; }</Member>
        <Member type="Property">public String TypeFullName { get; set; }</Member>
        <Member type="Constructor">protected NRMember()</Member>
        <Member type="Method">public abstract Void Accept(IVisitor visitor)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRField</Name>
        <Access>Public</Access>
        <Location left="1284" top="1890" />
        <Size width="162" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public String InitialValue { get; set; }</Member>
        <Member type="Property">public FieldModifier FieldModifier { get; set; }</Member>
        <Member type="Property">public Boolean IsStatic { get; set; }</Member>
        <Member type="Property">public Boolean IsReadonly { get; set; }</Member>
        <Member type="Property">public Boolean IsConstant { get; set; }</Member>
        <Member type="Property">public Boolean IsHider { get; set; }</Member>
        <Member type="Property">public Boolean IsVolatile { get; set; }</Member>
        <Member type="Constructor">public NRField()</Member>
        <Member type="Method">public override Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRRelationships</Name>
        <Access>Public</Access>
        <Location left="1072" top="1890" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public List&lt;NRNesting&gt; Nestings { get; private set; }</Member>
        <Member type="Property">public List&lt;NRGeneralization&gt; Generalizations { get; private set; }</Member>
        <Member type="Property">public List&lt;NRRealization&gt; Realizations { get; private set; }</Member>
        <Member type="Property">public List&lt;NRAssociation&gt; Associations { get; private set; }</Member>
        <Member type="Constructor">public NRRelationships()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NROperation</Name>
        <Access>Public</Access>
        <Location left="860" top="1890" />
        <Size width="162" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public OperationModifier OperationModifier { get; set; }</Member>
        <Member type="Property">public Boolean IsStatic { get; set; }</Member>
        <Member type="Property">public Boolean IsAbstract { get; set; }</Member>
        <Member type="Property">public Boolean IsVirtual { get; set; }</Member>
        <Member type="Property">public Boolean IsOverride { get; set; }</Member>
        <Member type="Property">public Boolean IsHider { get; set; }</Member>
        <Member type="Property">public Boolean IsSealed { get; set; }</Member>
        <Member type="Property">public List&lt;NRParameter&gt; Parameters { get; private set; }</Member>
        <Member type="Constructor">protected NROperation()</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRProperty</Name>
        <Access>Public</Access>
        <Location left="648" top="1890" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public AccessModifier GetterModifier { get; set; }</Member>
        <Member type="Property">public AccessModifier SetterModifier { get; set; }</Member>
        <Member type="Property">public Boolean HasGetter { get; set; }</Member>
        <Member type="Property">public Boolean HasSetter { get; set; }</Member>
        <Member type="Constructor">public NRProperty()</Member>
        <Member type="Method">public override Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRMethod</Name>
        <Access>Public</Access>
        <Location left="436" top="1890" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public NRMethod()</Member>
        <Member type="Method">public override Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRTypeBase</Name>
        <Access>Public</Access>
        <Location left="224" top="1890" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public String Name { get; set; }</Member>
        <Member type="Property">public String FullName { get; set; }</Member>
        <Member type="Property">public AccessModifier AccessModifier { get; set; }</Member>
        <Member type="Property">public String Parent { get; set; }</Member>
        <Member type="Constructor">protected NRTypeBase()</Member>
        <Member type="Method">public abstract Void Accept(IVisitor visitor)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NREnum</Name>
        <Access>Public</Access>
        <Location left="12" top="1890" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public List&lt;NREnumValue&gt; Values { get; private set; }</Member>
        <Member type="Constructor">public NREnum()</Member>
        <Member type="Method">public override Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRNesting</Name>
        <Access>Public</Access>
        <Location left="1920" top="1134" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public NRSingleInheritanceType ParentType { get; set; }</Member>
        <Member type="Property">public NRTypeBase InnerType { get; set; }</Member>
        <Member type="Constructor">public NRNesting()</Member>
        <Member type="Constructor">public NRNesting(NRSingleInheritanceType parentType, NRTypeBase innerType)</Member>
        <Member type="Method">public override String ToString()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ReflectionWorker</Name>
        <Access>Internal</Access>
        <Location left="1708" top="1134" />
        <Size width="162" height="706" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private NRAssembly nrAssembly</Member>
        <Member type="Field">private String path</Member>
        <Member type="Field">private Dictionary&lt;String, Assembly&gt; assemblies</Member>
        <Member type="Field">private readonly Dictionary&lt;Type, NRTypeBase&gt; entities</Member>
        <Member type="Field">private readonly Dictionary&lt;String, String&gt; operatorMethodsMap</Member>
        <Member type="Field">private const BindingFlags STANDARD_BINDING_FLAGS = 60</Member>
        <Member type="Property">public IFilter Filter { get; set; }</Member>
        <Member type="Constructor">public ReflectionWorker()</Member>
        <Member type="Method">public NRAssembly Reflect(String fileName)</Member>
        <Member type="Method">private Assembly CurrentDomain_ReflectionOnlyAssemblyResolve(Object sender, ResolveEventArgs args)</Member>
        <Member type="Method">private Void ReflectTypes(IEnumerable&lt;Type&gt; types)</Member>
        <Member type="Method">private Void ReflectType(Type type)</Member>
        <Member type="Method">private Void ReflectClass(Type type)</Member>
        <Member type="Method">private Void ReflectDelegate(Type type)</Member>
        <Member type="Method">private Void ReflectInterface(Type type)</Member>
        <Member type="Method">private Void ReflectStruct(Type type)</Member>
        <Member type="Method">private Void ReflectEnum(Type type)</Member>
        <Member type="Method">private Void ReflectSingleInheritanceType(Type type, NRSingleInheritanceType nrSingleInheritanceType)</Member>
        <Member type="Method">private Void ReflectTypeBase(Type type, NRTypeBase nrTypeBase)</Member>
        <Member type="Method">private Void ReflectEvents(Type type, NRCompositeType nrCompositeType)</Member>
        <Member type="Method">private Void ReflectFields(Type type, NRSingleInheritanceType nrSingleInheritanceType)</Member>
        <Member type="Method">private Void ReflectConstructors(Type type, NRSingleInheritanceType nrSingleInheritanceType)</Member>
        <Member type="Method">private Void ReflectMethods(Type type, NRCompositeType nrCompositeType)</Member>
        <Member type="Method">private Void ReflectProperties(Type type, NRCompositeType nrCompositeType)</Member>
        <Member type="Method">private Void ReflectParameters(MethodBase methodBase, List&lt;NRParameter&gt; nrParameters)</Member>
        <Member type="Method">private static Boolean HasMemberCompilerGeneratedAttribute(MemberInfo memberInfo)</Member>
        <Member type="Method">private static Boolean HasMemberAttribute(MemberInfo memberInfo, Type type)</Member>
        <Member type="Method">private static Boolean HasParamterAttribute(ParameterInfo parameterInfo, Type type)</Member>
        <Member type="Method">private static Boolean IsMethodOverwritten(Type type, MethodBase method)</Member>
        <Member type="Method">private static Boolean IsFieldOverwritten(Type type, FieldInfo fieldInfo)</Member>
        <Member type="Method">private static String GetTypeName(Type type)</Member>
        <Member type="Method">private static List&lt;String&gt; GetEventNames(Type type)</Member>
        <Member type="Method">private static Void ChangeOperationModifierIfOverwritten(Type type, MethodBase method, NROperation nrOperation)</Member>
        <Member type="Method">private static OperationModifier GetOperationModifier(MethodBase method)</Member>
        <Member type="Method">private static AccessModifier GetTypeAccessModifier(Type type)</Member>
        <Member type="Method">private static AccessModifier GetFieldAccessModifier(FieldInfo field)</Member>
        <Member type="Method">private static AccessModifier GetMethodAccessModifier(MethodBase methodBase)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRDelegate</Name>
        <Access>Public</Access>
        <Location left="1496" top="1134" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public String ReturnType { get; set; }</Member>
        <Member type="Property">public List&lt;NRParameter&gt; Parameters { get; private set; }</Member>
        <Member type="Constructor">public NRDelegate()</Member>
        <Member type="Method">public override Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>RelationshipCreator</Name>
        <Access>Public</Access>
        <Location left="1284" top="1134" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public RelationshipCreator()</Member>
        <Member type="Method">public NRRelationships CreateRelationships(NRAssembly nrAssembly, Boolean createNesting = True, Boolean createGeneralization = True, Boolean createRealization = True, Boolean createAssociation = True)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRGeneralization</Name>
        <Access>Public</Access>
        <Location left="1072" top="1134" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public NRCompositeType BaseType { get; set; }</Member>
        <Member type="Property">public NRCompositeType DerivedType { get; set; }</Member>
        <Member type="Constructor">public NRGeneralization()</Member>
        <Member type="Constructor">public NRGeneralization(NRCompositeType baseType, NRCompositeType derivedType)</Member>
        <Member type="Method">public override String ToString()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CSharp</Name>
        <Access>Public</Access>
        <Location left="860" top="1134" />
        <Size width="162" height="315" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public static String Declaration(NREnumValue enumValue)</Member>
        <Member type="Method">public static String Declaration(NREvent nrEvent)</Member>
        <Member type="Method">public static String Declaration(NRField field)</Member>
        <Member type="Method">public static String Declaration(NRConstructor constructor)</Member>
        <Member type="Method">public static String Declaration(NRMethod method)</Member>
        <Member type="Method">public static String Declaration(NROperator nrOperator)</Member>
        <Member type="Method">public static String Declaration(NRProperty property)</Member>
        <Member type="Method">public static String Declaration(IEnumerable&lt;NRParameter&gt; parameters)</Member>
        <Member type="Method">public static String Declaration(NRParameter parameter)</Member>
        <Member type="Method">public static String Declaration(OperationModifier modifier)</Member>
        <Member type="Method">public static String Declaration(AccessModifier modifier)</Member>
        <Member type="Method">public static String Declaration(ParameterModifier modifier)</Member>
        <Member type="Method">public static String Declaration(FieldModifier modifier)</Member>
        <Member type="Method">private static String AddSpace(String text)</Member>
        <Modifier>Static</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NROperator</Name>
        <Access>Public</Access>
        <Location left="648" top="1134" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public NROperator()</Member>
        <Member type="Method">public override Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NREvent</Name>
        <Access>Public</Access>
        <Location left="436" top="1134" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public NREvent()</Member>
        <Member type="Method">public override Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NREnumValue</Name>
        <Access>Public</Access>
        <Location left="224" top="1134" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public String Name { get; set; }</Member>
        <Member type="Property">public String Value { get; set; }</Member>
        <Member type="Constructor">public NREnumValue()</Member>
        <Member type="Method">public Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ReflectAllFilter</Name>
        <Access>Public</Access>
        <Location left="12" top="1134" />
        <Size width="162" height="298" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public ReflectAllFilter()</Member>
        <Member type="Method">public Boolean Reflect(NRClass nrClass)</Member>
        <Member type="Method">public Boolean Reflect(NRInterface nrInterface)</Member>
        <Member type="Method">public Boolean Reflect(NRStruct nrStruct)</Member>
        <Member type="Method">public Boolean Reflect(NRDelegate nrDelegate)</Member>
        <Member type="Method">public Boolean Reflect(NREnum nrEnum)</Member>
        <Member type="Method">public Boolean Reflect(NREnumValue nrEnumValue)</Member>
        <Member type="Method">public Boolean Reflect(NRMethod nrMethod)</Member>
        <Member type="Method">public Boolean Reflect(NROperator nrOperator)</Member>
        <Member type="Method">public Boolean Reflect(NREvent nrEvent)</Member>
        <Member type="Method">public Boolean Reflect(NRField nrField)</Member>
        <Member type="Method">public Boolean Reflect(NRConstructor nrConstructor)</Member>
        <Member type="Method">public Boolean Reflect(NRProperty nrProperty)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRCompositeType</Name>
        <Access>Public</Access>
        <Location left="1920" top="361" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public List&lt;NRProperty&gt; Properties { get; private set; }</Member>
        <Member type="Property">public List&lt;NREvent&gt; Events { get; private set; }</Member>
        <Member type="Property">public List&lt;NRMethod&gt; Methods { get; private set; }</Member>
        <Member type="Constructor">protected NRCompositeType()</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRSingleInheritanceType</Name>
        <Access>Public</Access>
        <Location left="1708" top="361" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public String BaseType { get; set; }</Member>
        <Member type="Property">public List&lt;String&gt; ImplementedInterfaces { get; private set; }</Member>
        <Member type="Property">public List&lt;NRTypeBase&gt; NestedTypes { get; private set; }</Member>
        <Member type="Property">public List&lt;NRConstructor&gt; Constructors { get; private set; }</Member>
        <Member type="Property">public List&lt;NROperator&gt; Operators { get; private set; }</Member>
        <Member type="Property">public List&lt;NRField&gt; Fields { get; private set; }</Member>
        <Member type="Constructor">protected NRSingleInheritanceType()</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRStruct</Name>
        <Access>Public</Access>
        <Location left="1496" top="361" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public NRStruct()</Member>
        <Member type="Method">public override Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRInterface</Name>
        <Access>Public</Access>
        <Location left="1284" top="361" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public NRInterface()</Member>
        <Member type="Method">public override Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRAssociation</Name>
        <Access>Public</Access>
        <Location left="1072" top="361" />
        <Size width="162" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public NRTypeBase StartType { get; set; }</Member>
        <Member type="Property">public NRTypeBase EndType { get; set; }</Member>
        <Member type="Property">public String StartRole { get; set; }</Member>
        <Member type="Property">public String EndRole { get; set; }</Member>
        <Member type="Property">public String StartMultiplicity { get; set; }</Member>
        <Member type="Property">public String EndMultiplicity { get; set; }</Member>
        <Member type="Constructor">public NRAssociation()</Member>
        <Member type="Constructor">public NRAssociation(NRTypeBase startType, NRTypeBase endType)</Member>
        <Member type="Method">public override String ToString()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRClass</Name>
        <Access>Public</Access>
        <Location left="860" top="361" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public ClassModifier ClassModifier { get; set; }</Member>
        <Member type="Constructor">public NRClass()</Member>
        <Member type="Method">public override Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRConstructor</Name>
        <Access>Public</Access>
        <Location left="648" top="361" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public NRConstructor()</Member>
        <Member type="Method">public override Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRAssembly</Name>
        <Access>Public</Access>
        <Location left="436" top="361" />
        <Size width="162" height="281" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public String FullName { get; set; }</Member>
        <Member type="Property">public String Source { get; set; }</Member>
        <Member type="Property">public List&lt;NRClass&gt; Classes { get; private set; }</Member>
        <Member type="Property">public List&lt;NRInterface&gt; Interfaces { get; private set; }</Member>
        <Member type="Property">public List&lt;NRStruct&gt; Structs { get; private set; }</Member>
        <Member type="Property">public List&lt;NREnum&gt; Enums { get; private set; }</Member>
        <Member type="Property">public List&lt;NRDelegate&gt; Delegates { get; private set; }</Member>
        <Member type="Property">public IEnumerable&lt;NRTypeBase&gt; Types { get; }</Member>
        <Member type="Property">public IEnumerable&lt;NRCompositeType&gt; CompositTypes { get; }</Member>
        <Member type="Property">public IEnumerable&lt;NRSingleInheritanceType&gt; SingleInheritanceTypes { get; }</Member>
        <Member type="Constructor">public NRAssembly()</Member>
        <Member type="Method">public Void Accept(IVisitor visitor)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Extensions</Name>
        <Access>Public</Access>
        <Location left="224" top="361" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public static IEnumerable&lt;MethodInfo&gt; GetMethods(Type type, String name, params Type[] parameterTypes)</Member>
        <Modifier>Static</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>StatisticFilter</Name>
        <Access>Public</Access>
        <Location left="12" top="361" />
        <Size width="162" height="723" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public IFilter Filter { get; set; }</Member>
        <Member type="Property">public Int32 ReflectedClasses { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredClasses { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedInterfaces { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredInterfaces { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedStructures { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredStructures { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedDelegates { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredDelegates { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedEnums { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredEnums { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedEnumValues { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredEnumValues { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedConstructors { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredConstructors { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedMethods { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredMethods { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedOperators { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredOperators { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedEvents { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredEvents { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedFields { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredFields { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedProperties { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredProperties { get; private set; }</Member>
        <Member type="Constructor">public StatisticFilter(IFilter filter)</Member>
        <Member type="Method">public Boolean Reflect(NRClass nrClass)</Member>
        <Member type="Method">public Boolean Reflect(NRInterface nrInterface)</Member>
        <Member type="Method">public Boolean Reflect(NRStruct nrStruct)</Member>
        <Member type="Method">public Boolean Reflect(NRDelegate nrDelegate)</Member>
        <Member type="Method">public Boolean Reflect(NREnum nrEnum)</Member>
        <Member type="Method">public Boolean Reflect(NREnumValue nrEnumValue)</Member>
        <Member type="Method">public Boolean Reflect(NRConstructor nrConstructor)</Member>
        <Member type="Method">public Boolean Reflect(NRMethod nrMethod)</Member>
        <Member type="Method">public Boolean Reflect(NROperator nrOperator)</Member>
        <Member type="Method">public Boolean Reflect(NREvent nrEvent)</Member>
        <Member type="Method">public Boolean Reflect(NRField nrField)</Member>
        <Member type="Method">public Boolean Reflect(NRProperty nrProperty)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Reflector</Name>
        <Access>Public</Access>
        <Location left="1920" top="12" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">private IFilter Filter { get; set; }</Member>
        <Member type="Constructor">public Reflector()</Member>
        <Member type="Method">public NRAssembly Reflect(String fileName, Boolean useNewAppDomain = True)</Member>
        <Member type="Method">public NRAssembly Reflect(String fileName, ref IFilter filter, Boolean useNewAppDomain = True)</Member>
        <Member type="Method">private NRAssembly Reflect(String fileName)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NRRealization</Name>
        <Access>Public</Access>
        <Location left="1708" top="12" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public NRInterface BaseType { get; set; }</Member>
        <Member type="Property">public NRSingleInheritanceType ImplementingType { get; set; }</Member>
        <Member type="Constructor">public NRRealization()</Member>
        <Member type="Constructor">public NRRealization(NRInterface baseType, NRSingleInheritanceType implementingType)</Member>
        <Member type="Method">public override String ToString()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Structure">
        <Name>FilterRule</Name>
        <Access>Public</Access>
        <Location left="1496" top="12" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public FilterModifiers Modifier { get; set; }</Member>
        <Member type="Property">public FilterElements Element { get; set; }</Member>
        <Member type="Constructor">public FilterRule(FilterModifiers modifier, FilterElements element)</Member>
      </Entity>
      <Entity type="Enum">
        <Name>ParameterModifier</Name>
        <Access>Public</Access>
        <Location left="1284" top="12" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>In = 0</Value>
        <Value>InOut = 1</Value>
        <Value>Out = 2</Value>
        <Value>Params = 3</Value>
        <Value>Optional = 4</Value>
      </Entity>
      <Entity type="Enum">
        <Name>FilterModifiers</Name>
        <Access>Public</Access>
        <Location left="1072" top="12" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>AllModifiers = 0</Value>
        <Value>Private = 1</Value>
        <Value>Public = 2</Value>
        <Value>Protected = 4</Value>
        <Value>Internal = 8</Value>
        <Value>ProtectedInternal = 16</Value>
        <Value>Static = 32</Value>
        <Value>Instance = 64</Value>
        <Value>Default = 128</Value>
      </Entity>
      <Entity type="Enum">
        <Name>OperationModifier</Name>
        <Access>Public</Access>
        <Location left="860" top="12" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>None = 0</Value>
        <Value>Static = 1</Value>
        <Value>Virtual = 2</Value>
        <Value>Abstract = 4</Value>
        <Value>Override = 8</Value>
        <Value>Sealed = 16</Value>
        <Value>Hider = 32</Value>
      </Entity>
      <Entity type="Enum">
        <Name>FilterElements</Name>
        <Access>Public</Access>
        <Location left="648" top="12" />
        <Size width="162" height="299" />
        <Collapsed>False</Collapsed>
        <Value>AllElements = 0</Value>
        <Value>Class = 1</Value>
        <Value>Struct = 2</Value>
        <Value>Interface = 3</Value>
        <Value>Enum = 4</Value>
        <Value>EnumValue = 5</Value>
        <Value>Delegate = 6</Value>
        <Value>Field = 7</Value>
        <Value>Constant = 8</Value>
        <Value>Property = 9</Value>
        <Value>Constructor = 10</Value>
        <Value>Method = 11</Value>
        <Value>Operator = 12</Value>
        <Value>Event = 13</Value>
      </Entity>
      <Entity type="Enum">
        <Name>FieldModifier</Name>
        <Access>Public</Access>
        <Location left="436" top="12" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>None = 0</Value>
        <Value>Static = 1</Value>
        <Value>Readonly = 2</Value>
        <Value>Constant = 4</Value>
        <Value>Hider = 8</Value>
        <Value>Volatile = 16</Value>
      </Entity>
      <Entity type="Enum">
        <Name>AccessModifier</Name>
        <Access>Public</Access>
        <Location left="224" top="12" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>Default = 0</Value>
        <Value>Public = 1</Value>
        <Value>ProtectedInternal = 2</Value>
        <Value>Internal = 3</Value>
        <Value>Protected = 4</Value>
        <Value>Private = 5</Value>
      </Entity>
      <Entity type="Enum">
        <Name>ClassModifier</Name>
        <Access>Public</Access>
        <Location left="12" top="12" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>None = 0</Value>
        <Value>Abstract = 1</Value>
        <Value>Sealed = 2</Value>
        <Value>Static = 3</Value>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Generalization" first="7" second="6">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="9" second="6">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="10" second="9">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="11" second="9">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="13" second="12">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="16" second="12">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="20" second="9">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="21" second="9">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="24" second="12">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="25" second="24">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="26" second="25">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="27" second="24">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="29" second="25">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="30" second="9">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="3" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="4" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="5" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="6" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="7" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="9" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="10" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="11" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="12" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="13" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="16" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="20" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="21" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="22" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="23" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="24" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="25" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="26" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="27" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="29" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="30" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="31" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="33" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="15" second="31">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>nrAssembly</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
    <Name>Filter</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>InvertFilter</Name>
        <Access>Public</Access>
        <Location left="106" top="727" />
        <Size width="290" height="315" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public IFilter Filter { get; set; }</Member>
        <Member type="Constructor">public InvertFilter(IFilter filter)</Member>
        <Member type="Method">public Boolean Reflect(NRClass nrClass)</Member>
        <Member type="Method">public Boolean Reflect(NRInterface nrInterface)</Member>
        <Member type="Method">public Boolean Reflect(NRStruct nrStruct)</Member>
        <Member type="Method">public Boolean Reflect(NRDelegate nrDelegate)</Member>
        <Member type="Method">public Boolean Reflect(NREnum nrEnum)</Member>
        <Member type="Method">public Boolean Reflect(NREnumValue nrEnumValue)</Member>
        <Member type="Method">public Boolean Reflect(NRMethod nrMethod)</Member>
        <Member type="Method">public Boolean Reflect(NROperator nrOperator)</Member>
        <Member type="Method">public Boolean Reflect(NREvent nrEvent)</Member>
        <Member type="Method">public Boolean Reflect(NRField nrField)</Member>
        <Member type="Method">public Boolean Reflect(NRConstructor nrConstructor)</Member>
        <Member type="Method">public Boolean Reflect(NRProperty nrProperty)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>IncludeFilter</Name>
        <Access>Public</Access>
        <Location left="424" top="361" />
        <Size width="290" height="315" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public List&lt;FilterRule&gt; Rules { get; set; }</Member>
        <Member type="Constructor">public IncludeFilter()</Member>
        <Member type="Method">public Boolean Reflect(NRClass nrClass)</Member>
        <Member type="Method">public Boolean Reflect(NRInterface nrInterface)</Member>
        <Member type="Method">public Boolean Reflect(NRStruct nrStruct)</Member>
        <Member type="Method">public Boolean Reflect(NRDelegate nrDelegate)</Member>
        <Member type="Method">public Boolean Reflect(NREnum nrEnum)</Member>
        <Member type="Method">public Boolean Reflect(NREnumValue nrEnumValue)</Member>
        <Member type="Method">public Boolean Reflect(NRConstructor nrConstructor)</Member>
        <Member type="Method">public Boolean Reflect(NRMethod nrMethod)</Member>
        <Member type="Method">public Boolean Reflect(NROperator nrOperator)</Member>
        <Member type="Method">public Boolean Reflect(NREvent nrEvent)</Member>
        <Member type="Method">public Boolean Reflect(NRField nrField)</Member>
        <Member type="Method">public Boolean Reflect(NRProperty nrProperty)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>StatisticFilter</Name>
        <Access>Public</Access>
        <Location left="424" top="727" />
        <Size width="290" height="723" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public IFilter Filter { get; set; }</Member>
        <Member type="Property">public Int32 ReflectedClasses { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredClasses { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedInterfaces { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredInterfaces { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedStructures { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredStructures { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedDelegates { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredDelegates { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedEnums { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredEnums { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedEnumValues { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredEnumValues { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedConstructors { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredConstructors { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedMethods { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredMethods { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedOperators { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredOperators { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedEvents { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredEvents { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedFields { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredFields { get; private set; }</Member>
        <Member type="Property">public Int32 ReflectedProperties { get; private set; }</Member>
        <Member type="Property">public Int32 IgnoredProperties { get; private set; }</Member>
        <Member type="Constructor">public StatisticFilter(IFilter filter)</Member>
        <Member type="Method">public Boolean Reflect(NRClass nrClass)</Member>
        <Member type="Method">public Boolean Reflect(NRInterface nrInterface)</Member>
        <Member type="Method">public Boolean Reflect(NRStruct nrStruct)</Member>
        <Member type="Method">public Boolean Reflect(NRDelegate nrDelegate)</Member>
        <Member type="Method">public Boolean Reflect(NREnum nrEnum)</Member>
        <Member type="Method">public Boolean Reflect(NREnumValue nrEnumValue)</Member>
        <Member type="Method">public Boolean Reflect(NRConstructor nrConstructor)</Member>
        <Member type="Method">public Boolean Reflect(NRMethod nrMethod)</Member>
        <Member type="Method">public Boolean Reflect(NROperator nrOperator)</Member>
        <Member type="Method">public Boolean Reflect(NREvent nrEvent)</Member>
        <Member type="Method">public Boolean Reflect(NRField nrField)</Member>
        <Member type="Method">public Boolean Reflect(NRProperty nrProperty)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IFilter</Name>
        <Access>Public</Access>
        <Location left="270" top="42" />
        <Size width="284" height="265" />
        <Collapsed>False</Collapsed>
        <Member type="Method">Boolean Reflect(NRClass nrClass)</Member>
        <Member type="Method">Boolean Reflect(NRInterface nrInterface)</Member>
        <Member type="Method">Boolean Reflect(NRStruct nrStruct)</Member>
        <Member type="Method">Boolean Reflect(NRDelegate nrDelegate)</Member>
        <Member type="Method">Boolean Reflect(NREnum nrEnum)</Member>
        <Member type="Method">Boolean Reflect(NREnumValue nrEnumValue)</Member>
        <Member type="Method">Boolean Reflect(NRConstructor nrConstructor)</Member>
        <Member type="Method">Boolean Reflect(NRMethod nrMethod)</Member>
        <Member type="Method">Boolean Reflect(NROperator nrOperator)</Member>
        <Member type="Method">Boolean Reflect(NREvent nrEvent)</Member>
        <Member type="Method">Boolean Reflect(NRField nrField)</Member>
        <Member type="Method">Boolean Reflect(NRProperty nrProperty)</Member>
      </Entity>
      <Entity type="Class">
        <Name>ReflectAllFilter</Name>
        <Access>Public</Access>
        <Location left="106" top="361" />
        <Size width="290" height="298" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public ReflectAllFilter()</Member>
        <Member type="Method">public Boolean Reflect(NRClass nrClass)</Member>
        <Member type="Method">public Boolean Reflect(NRInterface nrInterface)</Member>
        <Member type="Method">public Boolean Reflect(NRStruct nrStruct)</Member>
        <Member type="Method">public Boolean Reflect(NRDelegate nrDelegate)</Member>
        <Member type="Method">public Boolean Reflect(NREnum nrEnum)</Member>
        <Member type="Method">public Boolean Reflect(NREnumValue nrEnumValue)</Member>
        <Member type="Method">public Boolean Reflect(NRMethod nrMethod)</Member>
        <Member type="Method">public Boolean Reflect(NROperator nrOperator)</Member>
        <Member type="Method">public Boolean Reflect(NREvent nrEvent)</Member>
        <Member type="Method">public Boolean Reflect(NRField nrField)</Member>
        <Member type="Method">public Boolean Reflect(NRConstructor nrConstructor)</Member>
        <Member type="Method">public Boolean Reflect(NRProperty nrProperty)</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Realization" first="1" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="0" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>412</X>
          <Y>700</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="2" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>568</X>
          <Y>702</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>412</X>
          <Y>702</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="4" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
    <Name>Visitor</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Interface">
        <Name>IVisitor</Name>
        <Access>Public</Access>
        <Location left="256" top="39" />
        <Size width="253" height="299" />
        <Collapsed>False</Collapsed>
        <Member type="Method">Void Visit(NRAssembly nrAssembly)</Member>
        <Member type="Method">Void Visit(NRClass nrClass)</Member>
        <Member type="Method">Void Visit(NRInterface nrInterface)</Member>
        <Member type="Method">Void Visit(NRDelegate nrDelegate)</Member>
        <Member type="Method">Void Visit(NRStruct nrStruct)</Member>
        <Member type="Method">Void Visit(NREnum nrEnum)</Member>
        <Member type="Method">Void Visit(NRField nrField)</Member>
        <Member type="Method">Void Visit(NRProperty nrProperty)</Member>
        <Member type="Method">Void Visit(NRMethod nrMethod)</Member>
        <Member type="Method">Void Visit(NROperator nrMethod)</Member>
        <Member type="Method">Void Visit(NRConstructor nrConstructor)</Member>
        <Member type="Method">Void Visit(NREvent nrEvent)</Member>
        <Member type="Method">Void Visit(NRParameter nrParameter)</Member>
        <Member type="Method">Void Visit(NREnumValue nrEnumValue)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IVisitable</Name>
        <Access>Public</Access>
        <Location left="33" top="39" />
        <Size width="185" height="78" />
        <Collapsed>False</Collapsed>
        <Member type="Method">Void Accept(IVisitor visitor)</Member>
      </Entity>
    </Entities>
    <Relationships />
  </ProjectItem>
</Project>